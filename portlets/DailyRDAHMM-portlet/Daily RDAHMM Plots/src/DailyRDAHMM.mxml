<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" creationComplete="init();" verticalAlign="middle"
		xmlns:comp="components.*">
	<mx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.charts.HitData;
			import mx.charts.ChartItem;
			import mx.controls.DateField;
			import mx.events.ValidationResultEvent;
			import mx.validators.DateValidator;
			import mx.formatters.DateFormatter;
			import mx.formatters.NumberFormatter;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.charts.renderers.*;
			import mx.collections.ArrayCollection;
			import flash.utils.Timer;
			
			[Bindable]
			private var rawData:Array = new Array();
						
			[Bindable]
			private var statesData:Array = new Array();
			
			[Bindable]
			public var plotData:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var numberformatter:NumberFormatter = new NumberFormatter();
			
			[Bindable]
			private var dateformatter:DateFormatter = new DateFormatter();
			
			[Bindable]
			private var datevalidator:DateValidator = new DateValidator();
			
			[Bindable]
        	public var t:String = new String();
        	
        	[Bindable]
        	private var xData:ArrayCollection = new ArrayCollection();
        	
        	[Bindable]
        	private var yData:ArrayCollection = new ArrayCollection();
        	
        	[Bindable]
        	private var zData:ArrayCollection = new ArrayCollection();
        	
        	[Bindable]
        	private var minXValue:Number = new Number();
        	
        	[Bindable]
        	private var minYValue:Number = new Number();
        	
        	[Bindable]
        	private var minZValue:Number = new Number();
        	
        	private var vResult:ValidationResultEvent;
        	
        	
       		private function showInitTime():void {
            	// Record the number of ms since the player was initialized.
            	t = "App startup: " + getTimer() + " ms";
        	}
			
			private function init():void {
				rawDataHTTPService.url = "http://gf14.ucs.indiana.edu:4321/floodgrid/daily_project_blyt_2009-09-17.all.raw";
				statesDataHTTPService.url = "http://gf14.ucs.indiana.edu:4321/floodgrid/daily_project_blyt_2009-09-17.all.Q";
				//plotchart.visible = false;
				rawDataHTTPService.send();
				//callLater(showInitTime);
				
			}
			
			private function rawDataResultHandler(event:ResultEvent):void {
				
				rawData = event.result[0].toString().split('\n');
				rawData.pop();
				
				for each(var currLine:String in rawData){
					
					var temp:Array = new Array();
					temp = currLine.split(' ');
					temp.splice(5, 3);
					temp.unshift();
					
					
					
					
					var tempObj:Object = new Object();
					//tempObj.stationName = temp[0];
					tempObj.date = String(temp[1]).slice(0, 10);
					tempObj.xData = Number(temp[2]);
					tempObj.yData = Number(temp[3]);
					tempObj.zData = Number(temp[4]);
					tempObj.state = null;
					
					plotData.addItem(tempObj);
				}
				statesDataHTTPService.send();
			}
			
			private function statesDataResultHandler(event:ResultEvent):void {
				
				statesData = event.result[0].toString().split('\n');
				statesData.pop();
				for (var x:int=0; x<statesData.length; x++){
					plotData[x].state = statesData[x];
					plotData.refresh();
					
				}
				
				minXValue = plotData[0].xData;
				minYValue = plotData[0].yData;
				minZValue = plotData[0].zData; 
				
				for (var i:int = 1; i<plotData.length; i++) {
					
					 if(plotData[i].xData < minXValue) {
						minXValue = plotData[i].xData;
					}
					 if(plotData[i].yData < minYValue) {
						minYValue = plotData[i].yData;
					} 
					if(plotData[i].zData < minZValue) {
						minZValue = plotData[i].zData;
					} 
					
				}
				
				numberformatter.precision = 4;
				numberformatter.useNegativeSign = true;
				numberformatter.useThousandsSeparator = false;
				
				for (var j:int = 0; j<plotData.length; j++) {
					plotData[j].xData = numberformatter.format(plotData[j].xData - minXValue);
					plotData[j].yData = numberformatter.format(plotData[j].yData - minYValue); 
					plotData[j].zData = numberformatter.format(plotData[j].zData - minZValue); 
					
				}
				
				//Make three diff. datasets for each coordinate
				for (var k:int=0;k<plotData.length; k=k+7) {
					var xObject:Object = new Object(); //temp object for x Co-ordinate
					var yObject:Object = new Object(); //temp object for y Co-ordinate
					var zObject:Object = new Object(); //temp object for z Co-ordinate
					
					/* datevalidator.inputFormat = "YYYY-MM-DD";
					datevalidator.property = "object";
					datevalidator.source = plotData[k];
					dateformatter.formatString = "MMM-DD";
					
					vResult = datevalidator.validate();
					
                	if (vResult.type==ValidationResultEvent.VALID) {
                    		//dateformatter.text=dateFormatter.format(dob.text);
                    		xObject.date = dateformatter.format(plotData[k].date);
                	} */
                	
                	dateformatter.formatString = "MMM-DD-YYYY"
                	//xObject.date = dateformatter.format(plotData[k].date); //format date and add into xObject;
                	xObject.date = DateField.stringToDate(String(plotData[k].date), "YYYY-MM-DD");
                	yObject.date = DateField.stringToDate(String(plotData[k].date), "YYYY-MM-DD");
                	zObject.date = DateField.stringToDate(String(plotData[k].date), "YYYY-MM-DD"); 
					
					//add respective coordinate values corresponding to their state in their respective coordinate objects
					switch(plotData[k].state) {
						
						case '1':	xObject.value1 = Number(plotData[k].xData);
									yObject.value1 = Number(plotData[k].yData);
									zObject.value1 = Number(plotData[k].zData);
									break;
						case '2': 	xObject.value2 = Number(plotData[k].xData);
									yObject.value2 = Number(plotData[k].yData);
									zObject.value2 = Number(plotData[k].zData); 
									break;
						case '3': 	xObject.value3 = Number(plotData[k].xData);
									yObject.value3 = Number(plotData[k].yData);
									zObject.value3 = Number(plotData[k].zData); 
									break;
						case '4': 	xObject.value4 = Number(plotData[k].xData);
									yObject.value4 = Number(plotData[k].yData);
									zObject.value4 = Number(plotData[k].zData); 
									break;
						case '5': 	xObject.value5 = Number(plotData[k].xData);
									yObject.value5 = Number(plotData[k].yData);
									zObject.value5 = Number(plotData[k].zData);
									break;
					}
					
					xData.addItem(xObject);
					yData.addItem(yObject);
					zData.addItem(zObject);
					
					
				}
				 
				plotchartpanel.title = "Base Value: "+minYValue;
				plotchart.visible = true;
				//Alert.show(t);
				
				
			}
			
			private function showdatatip(hitdata:HitData):String {
				var str:String;
				str = dateformatter.format(hitdata.item.date);
				return str;
			}
			
		]]> 
	</mx:Script>
	
	
	<mx:Panel id="plotchartpanel" layout="vertical" verticalAlign="middle" width="100%" height="100%">
		<mx:PlotChart
			id="plotchart"
			showDataTips="true" width="100%" height="100%"
			dataProvider="{yData}"
			dataTipFunction="{showdatatip}"
			selectionMode="multiple"
			>
			<mx:horizontalAxis>
				<mx:CategoryAxis categoryField="date" title="Years"/>
			</mx:horizontalAxis>
									
			
			<mx:series>
				<mx:PlotSeries
					
					yField="value1"
					displayName="State 1"
					
				/>
				<mx:PlotSeries
					
					yField="value2"
					displayName="State 2"
				/>
				<mx:PlotSeries
					
					yField="value3"
					displayName="State 3"
				/>
				<mx:PlotSeries
					
					yField="value4"
					displayName="State 4"
				/>
				<mx:PlotSeries
					
					yField="value5"
					displayName="State 5"
				/>
				
			</mx:series>
		</mx:PlotChart>
		<mx:Legend dataProvider="{plotchart}"/>
	</mx:Panel>
	
	<mx:HTTPService id="rawDataHTTPService" resultFormat="array" result="rawDataResultHandler(event)"/>
	<mx:HTTPService id="statesDataHTTPService" resultFormat="array" result="statesDataResultHandler(event)"/>
	
</mx:Application>
