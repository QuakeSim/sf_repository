<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import mx.formatters.DateFormatter;
			import mx.events.ScrollEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.charts.renderers.*;
						
			[Bindable]
			private var stationStates:Array = new Array();
			
			[Bindable]
			private var rawData:Array = new Array();
			
			[Bindable]
			private var dataArray:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var toBeUsedArray:ArrayCollection = new ArrayCollection();
			
			private function init():void {
				getStateDataHTTP.send();
				getRawDataHTTP.send();
				
			}			
			
			//Get all the states for the station in this array
			private function stateDataHandler(event:ResultEvent):void
			{
				this.stationStates = String(event.result).split('\n');
			}
			
			private function rawDataHandler(event:ResultEvent):void
			{
				this.rawData = String(event.result).split('\n');
				
				for each (var currLine:String in rawData)
				{
					var tempArray:Array = currLine.split(' ');
					
					var dateTime:Array = String(tempArray[1]).split('T');
					
					//var dateArray:Array = String(dateTimeArray[0]).split('-');
					
					//var timeArray:Array = String(dateTimeArray[1]).split(':');
					
					//tempArray[1] = new Date(Number(dateArray[0]), Number(dateArray[1]), Number(dateArray[2]),Number(timeArray[0]),Number(timeArray[1]),Number(timeArray[2]));
					
					tempArray[1] = new Date(String(dateTime[0]));
					
					for(var x:int = 0 ; x<tempArray.length ; x = x + 1)
					{
						if (x <= 1) { continue; }
						tempArray[x] = Number(tempArray[x]);
					}
					
					//var plotData:Array = new Array();
					
					this.dataArray.addItem(tempArray);
					
				}
				
				var lowValue:Number = Number(this.dataArray[0][3]);
				
				for (x=1 ; x<this.dataArray.length ; x++)
				{
					if (Number(this.dataArray[x][3]) < lowValue)
					{
						lowValue = Number(this.dataArray[x][3]);
					}
				}
				
				for (x=0 ; x<this.dataArray.length ; x++)
				{
					//if (x>10) { continue; }
					var tempObj:Object = new Object();
					tempObj.date = x;
					var currValue:Number = Number(this.dataArray[x][3])-lowValue;
					switch (int(this.stationStates[x]))
					{
						case 0 : tempObj.value0 = currValue; break;
						case 1 : tempObj.value1 = currValue; break;
						case 2 : tempObj.value2 = currValue; break;
						case 3 : tempObj.value3 = currValue; break;
						case 4 : tempObj.value4 = currValue; break;
						case 5 : tempObj.value5 = currValue; break;
					} 
					
					toBeUsedArray.addItem(tempObj);
				}
				
			}
			
			/* private function plotscroll(event:ScrollEvent):void {
				showposition.text = "HScrollBar properties summary:" + '\n' +
                    "------------------------------------" + '\n' +
                    "Current scroll position: " + 
                    event.currentTarget.scrollPosition  + '\n' +
                    "The maximum scroll position: " + 
                    event.currentTarget.maxScrollPosition + '\n' +
                    "The minimum scroll position: " + 
                    event.currentTarget.minScrollPosition;
			} */

		]]>
	</mx:Script>
	
	<!--Define Custom Color-->
	<mx:Stroke id="s0" color="gray" weight="1"/>
	<mx:Stroke id="s1" color="red" weight="1"/>
	<mx:Stroke id="s2" color="green" weight="1"/>
	<mx:Stroke id="s3" color="blue" weight="1"/>
	<mx:Stroke id="s4" color="purple" weight="1"/>
	<mx:Stroke id="s5" color="cyan" weight="1"/>
	
	<!--Define Solid Color-->
	<mx:SolidColor id="f0" color="gray"/>
	<mx:SolidColor id="f1" color="red"/>
	<mx:SolidColor id="f2" color="green"/>
	<mx:SolidColor id="f3" color="blue"/>
	<mx:SolidColor id="f4" color="purple"/>
	<mx:SolidColor id="f5" color="cyan"/>
	
	<mx:Panel width="95%" height="100%" layout="vertical" horizontalAlign="center" title="Daily RDAHMM GPS Data Analysis">
	
	
	<mx:PlotChart 
		id="plotchart1"
		width="100%" 
		height="100%" 
		showDataTips="true" 
		dataProvider="{toBeUsedArray}"
		paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"
		
		> 
		<mx:series>
		
			<mx:PlotSeries 
				displayName="State 0"
				yField="value0"
				xField="date"
				stroke="{s0}"
				fill="{f0}"
				legendMarkerRenderer="mx.charts.renderers.DiamondItemRenderer"
				/>
			<mx:PlotSeries 
				displayName="State 1" 
				yField="value1" 
				xField="date" 
				stroke="{s1}" 
				fill="{f1}"
				legendMarkerRenderer="mx.charts.renderers.BoxItemRenderer" />
			<mx:PlotSeries 
				displayName="State 2" 
				yField="value2" 
				xField="date" 
				stroke="{s2}"
				fill="{f2}" />
			<mx:PlotSeries 
				displayName="State 3" 
				yField="value3" 
				xField="date" 
				stroke="{s3}" 
				fill="{f3}" />
			<mx:PlotSeries displayName="State 4" 
				yField="value4" 
				xField="date"
				stroke="{s4}" 
				fill="{f4}" />
			<mx:PlotSeries 
				displayName="State 5" 
				yField="value5" 
				xField="date" 
				stroke="{s5}" 
				fill="{f5}" />
		</mx:series>
		
	</mx:PlotChart>
	
	<!--<mx:HScrollBar
		scroll="plotscroll(event);" 
		width="50%"
		minScrollPosition="0" 
        maxScrollPosition="{toBeUsedArray.getItemAt(x)(1)}"
        lineScrollSize="50" 
        pageScrollSize="100"  
        repeatDelay="1000" 
        repeatInterval="500" >
	
	</mx:HScrollBar>-->
	
	<!--<mx:Text id="showposition" width="50%" height="100">
		
	</mx:Text>-->
	<mx:Panel layout="vertical" horizontalAlign="center" verticalAlign="middle">
		
	<mx:Legend dataProvider="{plotchart1}" width="100%" direction="horizontal" markerHeight="30" markerWidth="30" fontSize="20"/>
	</mx:Panel>
	
	</mx:Panel>
	
	
	<mx:HTTPService 
		id="getRawDataHTTP" url="http://gf14.ucs.indiana.edu:4321/floodgrid/daily_project_blyt_2009-09-17.all.raw" 
		resultFormat="array" result="rawDataHandler(event)"/>
	<mx:HTTPService 
		id="getStateDataHTTP" url="http://gf14.ucs.indiana.edu:4321/floodgrid/daily_project_blyt_2009-09-17.all.Q" 
		resultFormat="array" result="stateDataHandler(event)"/>		
	
	
</mx:Application>
