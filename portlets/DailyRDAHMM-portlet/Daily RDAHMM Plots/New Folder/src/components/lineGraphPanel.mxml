<?xml version="1.0" encoding="utf-8"?>
<mx:Panel
		xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:comp="components.*" 
		layout="vertical" 
		width="100%" 
		height="100%"
		creationComplete="init();" verticalAlign="middle"  horizontalAlign="center">
		<mx:Script>
			<![CDATA[
				import mx.events.StateChangeEvent;
				import mx.events.ItemClickEvent;
				import mx.formatters.SwitchSymbolFormatter;
				import mx.events.IndexChangedEvent;
				import mx.graphics.codec.PNGEncoder;
				import mx.charts.chartClasses.ChartBase;
				import mx.formatters.DateFormatter;
				import mx.charts.HitData;
				import mx.charts.DateTimeAxis;
				import mx.controls.Alert;
				import mx.events.FlexEvent;
				
				
				import mx.collections.ArrayCollection;
				
				[Bindable]
				public var graphData:ArrayCollection = new ArrayCollection();
				
				[Bindable]
				public var df:DateFormatter = new DateFormatter();
				
				[Bindable]
            	private var linkData:ArrayCollection = new ArrayCollection([
            	{week:"1w",weeklabel:"1 Week"},
            	{week:"2w",weeklabel:"2 Weeks"},
            	{week:"1m",weeklabel:"1 Month"},
            	{week:"3m",weeklabel:"3 Months"},
				{week:"6m",weeklabel:"6 Months"},
				{week:"YTD",weeklabel:"Year to Date"},
				{week:"1y",weeklabel:"1 Year"},
				{week:"2y",weeklabel:"2 Years"},
				{week:"5y",weeklabel:"5 Years"},
				{week:"max",weeklabel:"All Years"}            	
            	]);
				
				[Bindable]
				private var todaydate: Number = new Date().getTime();
				
				[Bindable]
				private var todaydateyear: Number = new Date().fullYear;
				
				[Bindable]
				private var counter:int = new int();
				
				
				public function showdatatip(hitdata:HitData):String {
					var str:String;
					df.formatString = "MMM-DD-YYYY";
					str = df.format(hitdata.item.date);
					//return str;
					hitdata.item.date = df.format(hitdata.item.date);
					return String(hitdata);
				}  
 				 
 			
				public function init():void {
					
					//plotchart.dataTipFunction = showdatatip;
					graphData.filterFunction = filterfunc;
					graphData.refresh();
					plotchart.dataProvider = graphData;
					counter = 0;
					trace(counter);
					trace(plotchart.getFirstItem(ChartBase.HORIZONTAL));
					//Alert.show(String(linkbar.getChildren()));
					linkbar.addEventListener(ItemClickEvent.ITEM_CLICK, changestyle);
					plotchart.addEventListener(StateChangeEvent.CURRENT_STATE_CHANGING, alertme);
					
					
				}
				
				private function alertme(event:StateChangeEvent):void {
					Alert.show("finito");
				}
				
				private function changestyle(event:ItemClickEvent):void {
					//Alert.show("in change style");
					//event.item.setStyle("textDecoration","none");
					//setStyle("textDecoration", "none");
					//linkbar.selectedIndex = event.index;
				}
/* 				public function definelabel(cat:Object,pcat:Object,ax:CategoryAxis,labelItem:Object):String  {
					        // Show contents of the labelItem:
					        
					        for (var s:String in labelItem) {
					            trace(s + ":" + labelItem[s]);
					        }
					
					        // Return the customized categoryField value:
					        var df1:DateFormatter = new DateFormatter();
					        df1.formatString = "YYYY";
					        
					        var str1:String = new String();
					        str1 = df1.format(cat);
					        return str1;
					        
					
					        // Note that if you did not specify a categoryField,
					        // cat would refer to the entire object and not the
					        // value of a single field. You could then access
					        // fields by using cat.field_name.
				} */
				
				private function filterData():void {
					//Alert.show("in change data function");
					graphData.filterFunction = filterfunc;
					graphData.refresh();
				
				
				
				}
				private function filterfunc(item:Object):Boolean{
		               //1252123200000
		               //1252036800000
		               //1251432000000
		               //one week date 1255711851704
		               //today         1256316651704
		               
		               var oneweek:Number = 604800000;
		               var twoweek:Number = oneweek*2;
		               var onemonth:Number = 2629743830;
		               var threemonth:Number = onemonth*3;
		               var sixmonth:Number = onemonth*6;
		               var oneyear:Number = 31556926000;
		               var twoyear:Number = oneyear*2;
		               var fiveyear:Number = oneyear*5;
		               
		               switch(linkbar.selectedIndex) {
		               	case 0: var oneweekdate:Number = todaydate - oneweek;
		               				if(item.date.time > oneweekdate) {
		               					return true;
		               				} break;
		               	case 1: var twoweekdate:Number = todaydate - twoweek;
		               				if(item.date.time > twoweekdate) {
		               					return true;
		               				} break;
		               	case 2: var onemonthdate:Number = todaydate - onemonth;
		               				if(item.date.time > onemonthdate) {
		               					return true;
		               				} break;
		               	case 3: var threemonthdate:Number = todaydate - threemonth;
		               				if(item.date.time > threemonthdate) {
		               					return true;
		               				} break;
		               	case 4: var sixmonthdate:Number = todaydate - sixmonth;
		               				if(item.date.time > sixmonthdate) {
		               					return true;
		               				} break;
		               	case 5: if(item.date.fullYear == todaydateyear) return true; break;
		               	case 6: var oneyeardate:Number = todaydate - oneyear;
		               				if(item.date.time > oneyeardate) {
		               					return true;
		               				} break;
		               	case 7: var twoyeardate:Number = todaydate - twoyear;
		               				if(item.date.time > twoyeardate) {
		               					return true;
		               				} break;
		               	case 8: var fiveyeardate:Number = todaydate - (fiveyear);
		               			if(item.date.time > fiveyeardate) {
		               				if(counter == 0) {
		               					counter++;
		               					return true;
		               					break;
		               				}
		               				else {
		               					counter++;
		               					if(counter==7) {
		               						counter=0;
		               						break;
		               					}
		               					break;
		               				}	
		               			} break;
		               	case 9: return true; break;
		                default : if(item.date.fullYear == todaydateyear) return true; break;
		               }
						
						/*  if(item.date.fullYear == 2009) return true;
						else {
							return false;
						}   */
						
						return false;
		                	              
		        }
		        
		        private function dataTipView(hitData:HitData):String
				{
					return (hitData.item.date as Date).toDateString()+"\n"+hitData.item.value;
	
				}
		        				
			]]>
		</mx:Script>
	<!--Define Custom Color-->
	
	<mx:Stroke id="s1" color="red" weight="4"/>
	<mx:Stroke id="s2" color="green" weight="4"/>
	<mx:Stroke id="s3" color="blue" weight="4"/>
	<mx:Stroke id="s4" color="purple" weight="4"/>
	<mx:Stroke id="s5" color="cyan" weight="4"/>
	
	<!--Define Solid Color-->
	
	<mx:SolidColor id="f1" color="red"/>
	<mx:SolidColor id="f2" color="green"/>
	<mx:SolidColor id="f3" color="blue"/>
	<mx:SolidColor id="f4" color="purple"/>
	<mx:SolidColor id="f5" color="cyan"/>
	
	<mx:HBox height="25" width="100%">
		<mx:HBox height="25" width="50%" verticalAlign="middle" dropShadowEnabled="true">
				<mx:LinkBar 
					id="linkbar" 
					borderStyle="none" 
					horizontalAlign="left" 
					dataProvider="{linkData}" 
					itemClick="filterData()"
					textDecoration="underline"
					textSelectedColor="#000000"
					selectionColor="#ffffff"
					height="25" selectedIndex="0"
					
					labelField="week" toolTipField="weeklabel" width="100%"/>
		</mx:HBox>
		<mx:HBox width="50%" height="25" horizontalAlign="right" verticalAlign="middle">
				<mx:Text id="from" text="from"/>
				<mx:Text id="dash" text="-" enabled="false"/>
				<mx:Text id="to" text="to"/>
		</mx:HBox>
	</mx:HBox>
	
	
	<mx:LineChart
			id="plotchart"
			
		width="100%" 
		height="100%" 
		showDataTips="true" 
		dataTipFunction="dataTipView"
		dataProvider="{graphData}"
		paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"
			>
		<mx:horizontalAxis>
			<mx:DateTimeAxis />
		</mx:horizontalAxis>
		
		<mx:series>
			
			<mx:LineSeries 
				displayName="State 1" 
				yField="value1" 
				xField="date" 
				lineStroke="{s1}" 
				fill="{f1}"
				 />
			<mx:LineSeries 
				displayName="State 2" 
				yField="value2" 
				xField="date" 
				lineStroke="{s2}"
				fill="{f2}" />
			<mx:LineSeries 
				displayName="State 3" 
				yField="value3" 
				xField="date" 
				lineStroke="{s3}" 
				fill="{f3}" />
			<mx:LineSeries displayName="State 4" 
				yField="value4" 
				xField="date"
				lineStroke="{s4}" 
				fill="{f4}" />
			<mx:LineSeries 
				displayName="State 5" 
				yField="value5" 
				xField="date" 
				lineStroke="{s5}" 
				fill="{f5}" />
		</mx:series>
		
		</mx:LineChart>
		<mx:Box >
				<mx:Legend dataProvider="{plotchart}" width="100%" direction="horizontal" 
					markerHeight="30" markerWidth="30" fontSize="20"/>	
		</mx:Box>
			
		
		
</mx:Panel>
