
;; Function square_upper_triangle_matrix

;; 15 regs to allocate: 53 59 55 56 (2) 58 52 45 54 51 76 (2) 44 57 77 (2) 42 43
;; 42 conflicts: 42 43 44 45 46 47 49 50 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 43 conflicts: 42 43 44 45 46 47 49 50 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 44 conflicts: 42 43 44 45 46 47 49 50 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 45 conflicts: 42 43 44 45 49 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 46 conflicts: 42 43 44 46 0 7
;; 47 conflicts: 42 43 44 47 0 7
;; 49 conflicts: 42 43 44 45 49 0 7
;; 50 conflicts: 42 43 44 50 0 7
;; 51 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 52 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 53 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 73 75 76 77 0 7 8
;; 54 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 55 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 73 75 76 77 0 7 8
;; 56 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 57 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 58 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 59 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 73 75 76 77 0 7 8
;; 60 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 76 77 0 7
;; 63 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 63 76 77 0 7
;; 64 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 64 76 77 7 8
;; 65 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 65 76 77 7 8
;; 66 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 66 76 77 0 7
;; 69 conflicts: 42 43 44 45 51 52 54 56 57 58 69 76 77 0 7
;; 73 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 73 76 77 0 7
;; 75 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 75 76 77 0 7
;; 76 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8
;; 77 conflicts: 42 43 44 45 51 52 53 54 55 56 57 58 59 60 63 64 65 66 69 73 75 76 77 0 7 8

Spilling for insn 4.
Using reg 0 for reload 0
Spilling for insn 6.
Using reg 0 for reload 0
Spilling for insn 8.
Using reg 0 for reload 0
Spilling for insn 15.
Spilling for insn 16.
Spilling for insn 20.
Spilling for insn 22.
Spilling for insn 26.
Spilling for insn 29.
Using reg 0 for reload 0
Using reg 1 for reload 1
Spilling for insn 32.
Using reg 0 for reload 1
Spilling for insn 35.
Spilling for insn 166.
Using reg 0 for reload 1
Spilling for insn 196.
Spilling for insn 48.
Spilling for insn 51.
Using reg 0 for reload 1
Spilling for insn 54.
Spilling for insn 171.
Using reg 0 for reload 1
Spilling for insn 70.
Spilling for insn 176.
Spilling for insn 179.
Spilling for insn 95.
Spilling for insn 96.
Spilling for insn 81.
Spilling for insn 86.
Spilling for insn 122.
Spilling for insn 124.
Using reg 1 for reload 0
Spilling for insn 133.
Using reg 0 for reload 0
Spilling for insn 58.
Using reg 0 for reload 1
Spilling for insn 145.
Spilling for insn 148.
Using reg 0 for reload 0
Using reg 1 for reload 1
Spilling for insn 39.
Using reg 0 for reload 1
;; Register dispositions:
46 in 0  47 in 0  49 in 0  50 in 0  52 in 5  53 in 1  
55 in 3  56 in 9  58 in 4  59 in 2  60 in 0  63 in 0  
64 in 8  65 in 8  66 in 0  69 in 0  73 in 0  75 in 0  
76 in 10  77 in 11  

;; Hard regs used:  0 1 2 3 4 5 6 8 9 10 11 16 17 20

(note 2 0 184 NOTE_INSN_DELETED 0)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp]
(note 184 2 4 [bb 0] NOTE_INSN_BASIC_BLOCK 0)

(note 4 184 6 NOTE_INSN_DELETED 0)

(note 6 4 8 NOTE_INSN_DELETED 0)

(note 8 6 9 NOTE_INSN_DELETED 0)

(note 9 8 12 NOTE_INSN_FUNCTION_BEG 0)

(note 12 9 202 0x4003e680 NOTE_INSN_BLOCK_BEG 0)

(insn 202 12 15 (set (reg:SI 0 eax)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 16 [0x10])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 15 202 16 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 8 (nil))
    (nil))

(insn 16 15 205 (parallel[ 
            (set (reg:SI 0 eax)
                (mult:SI (reg:SI 0 eax)
                    (mem/f:SI (plus:SI (reg:SI 6 ebp)
                            (const_int 16 [0x10])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 15 (nil))
    (nil))

(insn 205 16 18 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(note 18 205 208 NOTE_INSN_DELETED 0)

(note 208 18 20 NOTE_INSN_DELETED 0)

(insn 20 208 22 (parallel[ 
            (set (reg:SI 0 eax)
                (lshiftrt:SI (reg:SI 0 eax)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 16 (nil))
    (nil))

(insn 22 20 24 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (mem:SI (plus:SI (reg:SI 6 ebp)
                            (const_int -16 [0xfffffff0])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 20 (nil))
    (nil))

(insn 24 22 26 (parallel[ 
            (set (reg:SI 0 eax)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 22 (nil))
    (expr_list:REG_EQUAL (div:SI (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -16 [0xfffffff0])) 0)
            (const_int 2 [0x2]))
        (nil)))

(insn 26 24 211 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (mem/f:SI (plus:SI (reg:SI 6 ebp)
                            (const_int 16 [0x10])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 24 (nil))
    (nil))

(note 211 26 27 NOTE_INSN_DELETED 0)

(note 27 211 217 NOTE_INSN_DELETED 0)

(insn 217 27 29 (set (reg:SI 1 edx)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 8 [0x8])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 29 217 214 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 1 edx))) 113 {*lea_0} (insn_list 26 (insn_list 4 (nil)))
    (nil))

(insn 214 29 32 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(insn 32 214 35 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -20 [0xffffffec])) 0)
        (reg:SI 1 edx)) 33 {*movsi_1} (nil)
    (nil))

(insn 35 32 166 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -28 [0xffffffe4])) 0)
        (const_int 1 [0x1])) 33 {*movsi_1} (nil)
    (nil))

(insn 166 35 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 edx)
            (reg:SI 0 eax))) 2 {*cmpsi_1_insn} (insn_list 29 (insn_list 32 (nil)))
    (nil))

(jump_insn 167 166 197 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 288 {*jcc_1} (insn_list 166 (nil))
    (expr_list:REG_BR_PROB (const_int 3999 [0xf9f])
        (nil)))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 57

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 57
(note 197 167 196 [bb 1] NOTE_INSN_BASIC_BLOCK 0)

(insn 196 197 37 (set (reg/v:DF 11 st(3))
        (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0) 0 [0x0] 0 [0x0] 0 [0x0])) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 57 77

(note 37 196 43 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 57 77
(code_label 43 37 185 5 "" "" [1 uses])

(note 185 43 48 [bb 2] NOTE_INSN_BASIC_BLOCK 0)

(insn 48 185 220 (set (reg/v:SI 5 edi)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -20 [0xffffffec])) 0)) 33 {*movsi_1} (nil)
    (nil))

(note 220 48 51 NOTE_INSN_DELETED 0)

(insn 51 220 54 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)
        (reg/v:SI 5 edi)) 33 {*movsi_1} (nil)
    (nil))

(insn 54 51 223 (set (reg/v:SI 4 esi)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -28 [0xffffffe4])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 223 54 171 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 171 223 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 edi)
            (reg:SI 0 eax))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 172 171 198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 142)
            (pc))) 288 {*jcc_1} (insn_list 171 (nil))
    (expr_list:REG_BR_PROB (const_int 3999 [0xf9f])
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 52 54 57 58 77

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 52 54 57 58 77
(note 198 172 193 [bb 3] NOTE_INSN_BASIC_BLOCK 0)

(insn 193 198 56 (set (reg/v:DF 10 st(2))
        (reg/v:DF 11 st(3))) 63 {*movdf_integer} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 52 54 57 58 76 77

(note 56 193 62 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 52 54 57 58 76 77
(code_label 62 56 186 8 "" "" [1 uses])

(note 186 62 67 [bb 4] NOTE_INSN_BASIC_BLOCK 0)

(insn 67 186 70 (set (reg/v:SI 1 edx)
        (reg/v:SI 5 edi)) 33 {*movsi_1} (nil)
    (nil))

(insn 70 67 73 (set (reg/v:SI 3 ebx)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 73 70 76 (set (reg/v:SI 2 ecx)
        (reg/v:SI 4 esi)) 33 {*movsi_1} (nil)
    (nil))

(insn 76 73 226 (set (reg/v:DF 9 st(1))
        (reg/v:DF 10 st(2))) 63 {*movdf_integer} (nil)
    (nil))

(insn 226 76 176 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 176 226 178 (parallel[ 
            (set (reg:SI 0 eax)
                (minus:SI (reg:SI 0 eax)
                    (reg/v:SI 5 edi)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (nil)
    (nil))

(insn 178 176 179 (parallel[ 
            (set (reg:SI 0 eax)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 176 (nil))
    (expr_list:REG_EQUAL (div:SI (reg:SI 0 eax)
            (const_int 8 [0x8]))
        (nil)))

(insn 179 178 180 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 eax)
            (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 2 {*cmpsi_1_insn} (insn_list 178 (nil))
    (nil))

(jump_insn 180 179 78 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 288 {*jcc_1} (insn_list 179 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 52 53 54 55 56 57 58 59 76 77

(note 78 180 90 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 52 53 54 55 56 57 58 59 76 77
(code_label 90 78 187 11 "" "" [1 uses])

(note 187 90 95 [bb 5] NOTE_INSN_BASIC_BLOCK 0)

(insn 95 187 96 (set (reg:DF 8 st(0))
        (mem:DF (reg/v:SI 1 edx) 0)) 63 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v:SI 1 edx) 0)
        (nil)))

(insn 96 95 97 (set (reg:DF 8 st(0))
        (mult:DF (reg:DF 8 st(0))
            (mem:DF (reg/v:SI 3 ebx) 0))) 314 {*fop_df_comm} (insn_list 95 (nil))
    (nil))

(insn 97 96 99 (set (reg/v:DF 9 st(1))
        (plus:DF (reg/v:DF 9 st(1))
            (reg:DF 8 st(0)))) 314 {*fop_df_comm} (insn_list 96 (nil))
    (nil))

(insn 99 97 101 (set (reg:SI 0 eax)
        (mult:SI (reg/v:SI 2 ecx)
            (const_int 8 [0x8]))) -1 (nil)
    (nil))

(insn 101 99 109 (parallel[ 
            (set (reg/v:SI 1 edx)
                (plus:SI (reg/v:SI 1 edx)
                    (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 99 (nil))
    (nil))

(insn 109 101 110 (parallel[ 
            (set (reg/v:SI 3 ebx)
                (plus:SI (reg/v:SI 3 ebx)
                    (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(insn 110 109 112 (parallel[ 
            (set (reg/v:SI 2 ecx)
                (plus:SI (reg/v:SI 2 ecx)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 112 110 183 NOTE_INSN_LOOP_CONT 0)

(note 183 112 229 NOTE_INSN_LOOP_VTOP 0)

(insn 229 183 81 (set (reg/s:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 81 229 85 (parallel[ 
            (set (reg/s:SI 0 eax)
                (minus:SI (reg/s:SI 0 eax)
                    (reg/v:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 101 (nil))
    (nil))

(insn 85 81 86 (parallel[ 
            (set (reg/s:SI 0 eax)
                (ashiftrt:SI (reg/s:SI 0 eax)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 81 (nil))
    (expr_list:REG_EQUAL (div:SI (reg/s:SI 0 eax)
            (const_int 8 [0x8]))
        (nil)))

(insn 86 85 87 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/s:SI 0 eax)
            (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 2 {*cmpsi_1_insn} (insn_list 85 (nil))
    (nil))

(jump_insn 87 86 118 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 288 {*jcc_1} (insn_list 86 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 52 53 54 55 56 57 58 59 76 77

(note 118 87 119 NOTE_INSN_LOOP_END 0)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 52 54 56 57 58 76 77
(code_label 119 118 188 10 "" "" [1 uses])

(note 188 119 232 [bb 6] NOTE_INSN_BASIC_BLOCK 0)

(insn 232 188 122 (set (reg:SI 0 eax)
        (reg/v:SI 5 edi)) 33 {*movsi_1} (nil)
    (nil))

(insn 122 232 235 (parallel[ 
            (set (reg:SI 0 eax)
                (minus:SI (reg:SI 0 eax)
                    (mem/f:SI (plus:SI (reg:SI 6 ebp)
                            (const_int 8 [0x8])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (nil)
    (nil))

(insn 235 122 124 (set (reg:SI 1 edx)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 12 [0xc])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 124 235 126 (set (mem:DF (plus:SI (reg:SI 1 edx)
                (reg:SI 0 eax)) 0)
        (reg/v:DF 9 st(1))) 63 {*movdf_integer} (insn_list 122 (nil))
    (nil))

(note 126 124 128 NOTE_INSN_DELETED 0)

(insn 128 126 130 (set (reg/v:SI 5 edi)
        (plus:SI (mult:SI (reg/v:SI 4 esi)
                (const_int 8 [0x8]))
            (reg/v:SI 5 edi))) 113 {*lea_0} (nil)
    (nil))

(insn 130 128 131 (parallel[ 
            (set (reg/v:SI 4 esi)
                (plus:SI (reg/v:SI 4 esi)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 131 130 238 NOTE_INSN_DELETED 0)

(insn 238 131 133 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 133 238 241 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg/v:SI 4 esi)
                (const_int 8 [0x8]))
            (reg:SI 0 eax))) 113 {*lea_0} (insn_list 130 (nil))
    (nil))

(insn 241 133 135 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(note 135 241 175 NOTE_INSN_LOOP_CONT 0)

(note 175 135 244 NOTE_INSN_LOOP_VTOP 0)

(insn 244 175 58 (set (reg:SI 1 edx)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 58 244 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 eax)
            (reg:SI 1 edx))) 2 {*cmpsi_1_insn} (insn_list 133 (nil))
    (nil))

(jump_insn 59 58 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 288 {*jcc_1} (insn_list 58 (nil))
    (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
        (nil)))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 52 54 57 58 76 77

(note 141 59 142 NOTE_INSN_LOOP_END 0)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 42 43 44 45 51 57 77
(code_label 142 141 189 7 "" "" [1 uses])

(note 189 142 145 [bb 7] NOTE_INSN_BASIC_BLOCK 0)

(insn 145 189 245 (parallel[ 
            (set (mem:SI (plus:SI (reg:SI 6 ebp)
                        (const_int -28 [0xffffffe4])) 0)
                (plus:SI (mem:SI (plus:SI (reg:SI 6 ebp)
                            (const_int -28 [0xffffffe4])) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 245 145 146 NOTE_INSN_DELETED 0)

(note 146 245 251 NOTE_INSN_DELETED 0)

(insn 251 146 248 (set (reg:SI 1 edx)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -20 [0xffffffec])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 248 251 148 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -28 [0xffffffe4])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 148 248 254 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 1 edx))) 113 {*lea_0} (insn_list 145 (nil))
    (nil))

(insn 254 148 150 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -20 [0xffffffec])) 0)
        (reg:SI 1 edx)) 33 {*movsi_1} (nil)
    (nil))

(note 150 254 170 NOTE_INSN_LOOP_CONT 0)

(note 170 150 257 NOTE_INSN_LOOP_VTOP 0)

(insn 257 170 39 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 39 257 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 edx)
            (reg:SI 0 eax))) 2 {*cmpsi_1_insn} (insn_list 148 (nil))
    (nil))

(jump_insn 40 39 156 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 288 {*jcc_1} (insn_list 39 (nil))
    (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
        (nil)))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 51 57 77

(note 156 40 157 NOTE_INSN_LOOP_END 0)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp]
(code_label 157 156 190 4 "" "" [1 uses])

(note 190 157 162 [bb 8] NOTE_INSN_BASIC_BLOCK 0)
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 20 [frame]

(note 162 190 199 0x4003e680 NOTE_INSN_BLOCK_END 0)

(note 199 162 0 NOTE_INSN_DELETED 0)

