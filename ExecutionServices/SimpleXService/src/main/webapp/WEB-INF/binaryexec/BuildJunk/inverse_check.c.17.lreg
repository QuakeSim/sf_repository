
;; Function inverse_check



Pass 0

  Register 42 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1536 FP_SECOND_REG:1536 FLOAT_REGS:1536 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1536 ALL_REGS:1536 MEM:254
  Register 43 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1536 FP_SECOND_REG:1536 FLOAT_REGS:1536 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1536 ALL_REGS:1536 MEM:254
  Register 44 costs: NO_REGS:2 AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 FP_TOP_REG:1286 FP_SECOND_REG:1286 FLOAT_REGS:1286 SSE_REGS:216 MMX_REGS:323 FLOAT_INT_REGS:1286 ALL_REGS:1286 MEM:109
  Register 45 costs: NO_REGS:2 AREG:384 DREG:384 CREG:384 BREG:384 SIREG:384 DIREG:384 AD_REGS:384 Q_REGS:384 NON_Q_REGS:396 INDEX_REGS:384 GENERAL_REGS:396 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 SSE_REGS:396 MMX_REGS:396 FLOAT_INT_REGS:384 ALL_REGS:396 MEM:270
  Register 46 costs: NO_REGS:2 AREG:354 DREG:354 CREG:354 BREG:354 SIREG:354 DIREG:354 AD_REGS:354 Q_REGS:354 NON_Q_REGS:406 INDEX_REGS:354 GENERAL_REGS:406 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 SSE_REGS:406 MMX_REGS:406 FLOAT_INT_REGS:354 ALL_REGS:414 MEM:258
  Register 47 costs: NO_REGS:32 AREG:1440 DREG:1440 CREG:1440 BREG:1440 SIREG:1440 DIREG:1440 AD_REGS:1440 Q_REGS:1440 NON_Q_REGS:1952 INDEX_REGS:1440 GENERAL_REGS:1952 FP_TOP_REG:32 FP_SECOND_REG:32 FLOAT_REGS:32 SSE_REGS:1952 MMX_REGS:1952 FLOAT_INT_REGS:1440 ALL_REGS:2016 MEM:1152
  Register 48 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:2462 FP_SECOND_REG:2462 FLOAT_REGS:2462 SSE_REGS:412 MMX_REGS:618 FLOAT_INT_REGS:2462 ALL_REGS:2462 MEM:223
  Register 49 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:3712 FP_SECOND_REG:3712 FLOAT_REGS:3712 SSE_REGS:640 MMX_REGS:960 FLOAT_INT_REGS:3712 ALL_REGS:3712 MEM:448
  Register 50 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:6368 FP_SECOND_REG:6368 FLOAT_REGS:6368 SSE_REGS:1088 MMX_REGS:1632 FLOAT_INT_REGS:6368 ALL_REGS:6368 MEM:688
  Register 51 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:2936 FP_SECOND_REG:2936 FLOAT_REGS:2936 SSE_REGS:496 MMX_REGS:744 FLOAT_INT_REGS:2936 ALL_REGS:2936 MEM:268
  Register 52 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:2048 FP_SECOND_REG:2048 FLOAT_REGS:2048 SSE_REGS:384 MMX_REGS:576 FLOAT_INT_REGS:2048 ALL_REGS:2048 MEM:384
  Register 53 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:256
  Register 54 costs: NO_REGS:128 AREG:128 DREG:128 CREG:128 BREG:128 SIREG:128 DIREG:128 AD_REGS:128 Q_REGS:128 NON_Q_REGS:128 INDEX_REGS:128 GENERAL_REGS:128 FP_TOP_REG:2304 FP_SECOND_REG:2304 FLOAT_REGS:2304 SSE_REGS:512 MMX_REGS:704 FLOAT_INT_REGS:2304 ALL_REGS:2304 MEM:384
  Register 55 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:128
  Register 57 costs: NO_REGS:128 AREG:128 DREG:128 CREG:128 BREG:128 SIREG:128 DIREG:128 AD_REGS:128 Q_REGS:128 NON_Q_REGS:128 INDEX_REGS:128 GENERAL_REGS:128 FP_TOP_REG:1536 FP_SECOND_REG:1536 FLOAT_REGS:1536 SSE_REGS:384 MMX_REGS:512 FLOAT_INT_REGS:1536 ALL_REGS:1536 MEM:256
  Register 58 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:128
  Register 59 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:128 INDEX_REGS:0 GENERAL_REGS:128 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:192
  Register 61 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:352 FP_SECOND_REG:352 FLOAT_REGS:352 SSE_REGS:64 MMX_REGS:96 FLOAT_INT_REGS:352 ALL_REGS:352 MEM:64
  Register 62 costs: NO_REGS:32 AREG:32 DREG:32 CREG:32 BREG:32 SIREG:32 DIREG:32 AD_REGS:32 Q_REGS:32 NON_Q_REGS:32 INDEX_REGS:32 GENERAL_REGS:32 FP_TOP_REG:576 FP_SECOND_REG:576 FLOAT_REGS:576 SSE_REGS:128 MMX_REGS:176 FLOAT_INT_REGS:576 ALL_REGS:576 MEM:96
  Register 63 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:928 FP_SECOND_REG:928 FLOAT_REGS:928 SSE_REGS:160 MMX_REGS:240 FLOAT_INT_REGS:928 ALL_REGS:928 MEM:144
  Register 65 costs: NO_REGS:32 AREG:32 DREG:32 CREG:32 BREG:32 SIREG:32 DIREG:32 AD_REGS:32 Q_REGS:32 NON_Q_REGS:32 INDEX_REGS:32 GENERAL_REGS:32 FP_TOP_REG:384 FP_SECOND_REG:384 FLOAT_REGS:384 SSE_REGS:96 MMX_REGS:128 FLOAT_INT_REGS:384 ALL_REGS:384 MEM:64
  Register 66 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:352 FP_SECOND_REG:352 FLOAT_REGS:352 SSE_REGS:64 MMX_REGS:96 FLOAT_INT_REGS:352 ALL_REGS:352 MEM:32
  Register 67 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:128 INDEX_REGS:0 GENERAL_REGS:128 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:256
  Register 69 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:2048 FP_SECOND_REG:2048 FLOAT_REGS:2048 SSE_REGS:384 MMX_REGS:576 FLOAT_INT_REGS:2048 ALL_REGS:2048 MEM:384
  Register 70 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:352 FP_SECOND_REG:352 FLOAT_REGS:352 SSE_REGS:64 MMX_REGS:96 FLOAT_INT_REGS:352 ALL_REGS:352 MEM:64
  Register 71 costs: NO_REGS:128 AREG:128 DREG:128 CREG:128 BREG:128 SIREG:128 DIREG:128 AD_REGS:128 Q_REGS:128 NON_Q_REGS:128 INDEX_REGS:128 GENERAL_REGS:128 FP_TOP_REG:1824 FP_SECOND_REG:1824 FLOAT_REGS:1824 SSE_REGS:416 MMX_REGS:560 FLOAT_INT_REGS:1824 ALL_REGS:1824 MEM:288
  Register 72 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:128
  Register 74 costs: NO_REGS:128 AREG:128 DREG:128 CREG:128 BREG:128 SIREG:128 DIREG:128 AD_REGS:128 Q_REGS:128 NON_Q_REGS:128 INDEX_REGS:128 GENERAL_REGS:128 FP_TOP_REG:1536 FP_SECOND_REG:1536 FLOAT_REGS:1536 SSE_REGS:384 MMX_REGS:512 FLOAT_INT_REGS:1536 ALL_REGS:1536 MEM:256
  Register 75 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:128
  Register 76 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:128 INDEX_REGS:0 GENERAL_REGS:128 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:192
  Register 78 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:192
  Register 79 costs: NO_REGS:128 AREG:128 DREG:128 CREG:128 BREG:128 SIREG:128 DIREG:128 AD_REGS:128 Q_REGS:128 NON_Q_REGS:128 INDEX_REGS:128 GENERAL_REGS:128 FP_TOP_REG:2304 FP_SECOND_REG:2304 FLOAT_REGS:2304 SSE_REGS:512 MMX_REGS:704 FLOAT_INT_REGS:2304 ALL_REGS:2304 MEM:384
  Register 80 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:128
  Register 82 costs: NO_REGS:128 AREG:128 DREG:128 CREG:128 BREG:128 SIREG:128 DIREG:128 AD_REGS:128 Q_REGS:128 NON_Q_REGS:128 INDEX_REGS:128 GENERAL_REGS:128 FP_TOP_REG:1536 FP_SECOND_REG:1536 FLOAT_REGS:1536 SSE_REGS:384 MMX_REGS:512 FLOAT_INT_REGS:1536 ALL_REGS:1536 MEM:256
  Register 83 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:128
  Register 84 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:128 INDEX_REGS:0 GENERAL_REGS:128 FP_TOP_REG:1408 FP_SECOND_REG:1408 FLOAT_REGS:1408 SSE_REGS:256 MMX_REGS:384 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:192
  Register 86 costs: NO_REGS:0 AREG:1408 DREG:1408 CREG:1408 BREG:1408 SIREG:1408 DIREG:1408 AD_REGS:1408 Q_REGS:1408 NON_Q_REGS:1408 INDEX_REGS:1408 GENERAL_REGS:1408 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:1408 MMX_REGS:1408 FLOAT_INT_REGS:1408 ALL_REGS:1408 MEM:960
  Register 87 costs: NO_REGS:0 AREG:640 DREG:640 CREG:640 BREG:640 SIREG:640 DIREG:640 AD_REGS:640 Q_REGS:640 NON_Q_REGS:1408 INDEX_REGS:640 GENERAL_REGS:1408 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:1408 MMX_REGS:1408 FLOAT_INT_REGS:640 ALL_REGS:1408 MEM:768
  Register 89 costs: NO_REGS:32 AREG:192 DREG:192 CREG:192 BREG:192 SIREG:192 DIREG:192 AD_REGS:192 Q_REGS:192 NON_Q_REGS:384 INDEX_REGS:192 GENERAL_REGS:384 FP_TOP_REG:32 FP_SECOND_REG:32 FLOAT_REGS:32 SSE_REGS:384 MMX_REGS:384 FLOAT_INT_REGS:192 ALL_REGS:384 MEM:192
  Register 91 costs: NO_REGS:0 AREG:160 DREG:160 CREG:160 BREG:160 SIREG:160 DIREG:160 AD_REGS:160 Q_REGS:160 NON_Q_REGS:352 INDEX_REGS:160 GENERAL_REGS:352 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:352 MMX_REGS:352 FLOAT_INT_REGS:160 ALL_REGS:352 MEM:160
  Register 92 costs: NO_REGS:2 AREG:34 DREG:34 CREG:34 BREG:34 SIREG:34 DIREG:34 AD_REGS:34 Q_REGS:34 NON_Q_REGS:34 INDEX_REGS:34 GENERAL_REGS:34 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 SSE_REGS:34 MMX_REGS:34 FLOAT_INT_REGS:34 ALL_REGS:34 MEM:26
  Register 93 costs: NO_REGS:2 AREG:24 DREG:24 CREG:24 BREG:24 SIREG:24 DIREG:24 AD_REGS:24 Q_REGS:24 NON_Q_REGS:24 INDEX_REGS:24 GENERAL_REGS:24 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 SSE_REGS:24 MMX_REGS:24 FLOAT_INT_REGS:24 ALL_REGS:24 MEM:18
  Register 96 costs: NO_REGS:0 AREG:22 DREG:22 CREG:22 BREG:22 SIREG:22 DIREG:22 AD_REGS:22 Q_REGS:22 NON_Q_REGS:22 INDEX_REGS:22 GENERAL_REGS:22 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:22 MMX_REGS:22 FLOAT_INT_REGS:22 ALL_REGS:22 MEM:16
  Register 99 costs: NO_REGS:2 AREG:14 DREG:14 CREG:14 BREG:14 SIREG:14 DIREG:14 AD_REGS:14 Q_REGS:14 NON_Q_REGS:24 INDEX_REGS:14 GENERAL_REGS:24 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 SSE_REGS:24 MMX_REGS:24 FLOAT_INT_REGS:14 ALL_REGS:26 MEM:13
  Register 101 costs: NO_REGS:2 AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:24 INDEX_REGS:12 GENERAL_REGS:24 FP_TOP_REG:2 FP_SECOND_REG:2 FLOAT_REGS:2 SSE_REGS:24 MMX_REGS:24 FLOAT_INT_REGS:12 ALL_REGS:24 MEM:13
  Register 102 costs: NO_REGS:0 AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:22 INDEX_REGS:10 GENERAL_REGS:22 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:22 MMX_REGS:22 FLOAT_INT_REGS:10 ALL_REGS:22 MEM:12
  Register 103 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:208 INDEX_REGS:0 GENERAL_REGS:208 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:208 MMX_REGS:208 FLOAT_INT_REGS:0 ALL_REGS:240 MEM:64
  Register 104 costs: NO_REGS:0 AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:52 INDEX_REGS:0 GENERAL_REGS:52 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:52 MMX_REGS:52 FLOAT_INT_REGS:0 ALL_REGS:60 MEM:16

  Register 42 pref GENERAL_REGS or none
  Register 43 pref GENERAL_REGS or none
  Register 44 pref GENERAL_REGS or none
  Register 45 pref FLOAT_REGS or none
  Register 46 pref FLOAT_REGS or none
  Register 47 pref FLOAT_REGS or none
  Register 48 pref GENERAL_REGS or none
  Register 49 pref GENERAL_REGS or none
  Register 50 pref GENERAL_REGS or none
  Register 51 pref GENERAL_REGS or none
  Register 52 pref GENERAL_REGS or none
  Register 53 pref GENERAL_REGS or none
  Register 54 pref GENERAL_REGS or none
  Register 55 pref GENERAL_REGS or none
  Register 57 pref GENERAL_REGS or none
  Register 58 pref GENERAL_REGS or none
  Register 59 pref INDEX_REGS, else GENERAL_REGS
  Register 61 pref GENERAL_REGS or none
  Register 62 pref GENERAL_REGS or none
  Register 63 pref GENERAL_REGS or none
  Register 65 pref GENERAL_REGS or none
  Register 66 pref GENERAL_REGS or none
  Register 67 pref INDEX_REGS, else GENERAL_REGS
  Register 69 pref GENERAL_REGS or none
  Register 70 pref GENERAL_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 74 pref GENERAL_REGS or none
  Register 75 pref GENERAL_REGS or none
  Register 76 pref INDEX_REGS, else GENERAL_REGS
  Register 78 pref GENERAL_REGS or none
  Register 79 pref GENERAL_REGS or none
  Register 80 pref GENERAL_REGS or none
  Register 82 pref GENERAL_REGS or none
  Register 83 pref GENERAL_REGS or none
  Register 84 pref INDEX_REGS, else GENERAL_REGS
  Register 86 pref FLOAT_REGS or none
  Register 87 pref FLOAT_REGS, else FLOAT_INT_REGS
  Register 89 pref FLOAT_REGS or none
  Register 91 pref FLOAT_REGS or none
  Register 92 pref FLOAT_REGS or none
  Register 93 pref FLOAT_REGS or none
  Register 96 pref FLOAT_REGS or none
  Register 99 pref FLOAT_REGS or none
  Register 101 pref FLOAT_REGS, else FLOAT_INT_REGS
  Register 102 pref FLOAT_REGS, else FLOAT_INT_REGS
  Register 103 pref FLOAT_INT_REGS or none
  Register 104 pref FLOAT_INT_REGS or none
105 registers.

Register 42 used 9 times across 144 insns; set 1 time; user var; dies in 0 places; GENERAL_REGS or none; pointer.

Register 43 used 9 times across 142 insns; set 1 time; user var; dies in 0 places; GENERAL_REGS or none; pointer.

Register 44 used 18 times across 154 insns; set 1 time; user var; GENERAL_REGS or none.

Register 45 used 10 times across 152 insns; set 2 times; user var; 8 bytes; FLOAT_REGS or none.

Register 46 used 11 times across 172 insns; set 2 times; user var; crosses 1 call; 8 bytes; FLOAT_REGS or none.

Register 47 used 17 times across 104 insns; set 2 times; user var; 8 bytes; FLOAT_REGS or none.

Register 48 used 28 times across 136 insns; set 2 times; user var; dies in 0 places; GENERAL_REGS or none.

Register 49 used 20 times across 21 insns; set 1 time; user var; dies in 2 places; GENERAL_REGS or none.

Register 50 used 38 times across 92 insns; set 2 times; user var; dies in 0 places; GENERAL_REGS or none.

Register 51 used 33 times across 122 insns; set 2 times; user var; dies in 0 places; GENERAL_REGS or none.

Register 52 used 12 times across 19 insns; set 2 times; GENERAL_REGS or none.

Register 53 used 8 times across 2 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 54 used 12 times across 3 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 55 used 8 times across 2 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 57 used 8 times across 2 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 58 used 8 times across 2 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 59 used 8 times across 2 insns in block 7; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 61 used 6 times across 2 insns in block 5; set 1 time; GENERAL_REGS or none.

Register 62 used 9 times across 3 insns in block 5; set 1 time; GENERAL_REGS or none.

Register 63 used 7 times across 37 insns; set 1 time; dies in 0 places; GENERAL_REGS or none.

Register 65 used 6 times across 2 insns in block 5; set 1 time; GENERAL_REGS or none.

Register 66 used 6 times across 2 insns in block 5; set 1 time; GENERAL_REGS or none.

Register 67 used 8 times across 2 insns in block 8; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 69 used 12 times across 5 insns; set 2 times; GENERAL_REGS or none.

Register 70 used 6 times across 2 insns in block 5; set 1 time; GENERAL_REGS or none.

Register 71 used 11 times across 35 insns; set 1 time; dies in 0 places; GENERAL_REGS or none.

Register 72 used 8 times across 2 insns in block 10; set 1 time; GENERAL_REGS or none.

Register 74 used 8 times across 2 insns in block 10; set 1 time; GENERAL_REGS or none.

Register 75 used 8 times across 2 insns in block 10; set 1 time; GENERAL_REGS or none.

Register 76 used 8 times across 2 insns in block 10; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 78 used 8 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 79 used 12 times across 3 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 80 used 8 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 82 used 8 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 83 used 8 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 84 used 8 times across 2 insns in block 11; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 86 used 8 times across 2 insns in block 12; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 87 used 8 times across 2 insns in block 12; set 1 time; 8 bytes; pref FLOAT_REGS, else FLOAT_INT_REGS.

Register 89 used 6 times across 2 insns in block 14; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 91 used 6 times across 2 insns in block 16; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 92 used 3 times across 4 insns; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 93 used 2 times across 2 insns in block 19; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 96 used 2 times across 2 insns in block 20; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 99 used 2 times across 2 insns in block 21; set 1 time; 8 bytes; FLOAT_REGS or none.

Register 101 used 2 times across 3 insns in block 22; set 1 time; 8 bytes; pref FLOAT_REGS, else FLOAT_INT_REGS.

Register 102 used 2 times across 4 insns in block 22; set 1 time; 8 bytes; pref FLOAT_REGS, else FLOAT_INT_REGS.

Register 103 used 5 times across 57 insns; set 1 time; user var; dies in 0 places; 8 bytes; FLOAT_INT_REGS or none.

Register 104 used 3 times across 64 insns; set 1 time; user var; dies in 0 places; 8 bytes; FLOAT_INT_REGS or none.

25 basic blocks, 39 edges.

Basic block 0: first insn 289, last 275, loop_depth 0, count 0.
Predecessors:  ENTRY (fallthru)
Successors:  1 (fallthru) 19 (crit)
Registers live at start: 6 [bp] 7 [sp] 16 [] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48

Basic block 1: first insn 325, last 324, loop_depth 0, count 0.
Predecessors:  0 (fallthru)
Successors:  2 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104

Basic block 2: first insn 31, last 280, loop_depth 1, count 0.
Predecessors:  18 (crit) 1 (fallthru)
Successors:  3 (fallthru) 18 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 104

Basic block 3: first insn 326, last 321, loop_depth 1, count 0.
Predecessors:  2 (fallthru)
Successors:  4 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

Basic block 4: first insn 43, last 285, loop_depth 2, count 0.
Predecessors:  17 (crit) 3 (fallthru)
Successors:  5 (fallthru) 13 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 103 104

Basic block 5: first insn 327, last 318, loop_depth 2, count 0.
Predecessors:  4 (fallthru)
Successors:  6 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104

Basic block 6: first insn 57, last 65, loop_depth 3, count 0.
Predecessors:  12 (crit) 5 (fallthru)
Successors:  7 (fallthru) 8
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104

Basic block 7: first insn 293, last 82, loop_depth 3, count 0.
Predecessors:  6 (fallthru)
Successors:  9
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

Basic block 8: first insn 84, last 100, loop_depth 3, count 0.
Predecessors:  6
Successors:  9 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

Basic block 9: first insn 101, last 103, loop_depth 3, count 0.
Predecessors:  8 (fallthru) 7
Successors:  10 (fallthru) 11
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

Basic block 10: first insn 296, last 120, loop_depth 3, count 0.
Predecessors:  9 (fallthru)
Successors:  12
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104

Basic block 11: first insn 122, last 138, loop_depth 3, count 0.
Predecessors:  9
Successors:  12 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104

Basic block 12: first insn 139, last 54, loop_depth 3, count 0.
Predecessors:  11 (fallthru) 10
Successors:  13 (fallthru,crit) 6 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104

Basic block 13: first insn 156, last 159, loop_depth 2, count 0.
Predecessors:  12 (fallthru,crit) 4 (crit)
Successors:  14 (fallthru) 15 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

Basic block 14: first insn 300, last 169, loop_depth 2, count 0.
Predecessors:  13 (fallthru)
Successors:  15 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

Basic block 15: first insn 170, last 173, loop_depth 2, count 0.
Predecessors:  14 (fallthru) 13 (crit)
Successors:  16 (fallthru) 17 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

Basic block 16: first insn 302, last 183, loop_depth 2, count 0.
Predecessors:  15 (fallthru)
Successors:  17 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

Basic block 17: first insn 188, last 40, loop_depth 2, count 0.
Predecessors:  16 (fallthru) 15 (crit)
Successors:  18 (fallthru,crit) 4 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

Basic block 18: first insn 201, last 28, loop_depth 1, count 0.
Predecessors:  17 (fallthru,crit) 2 (crit)
Successors:  19 (fallthru,crit) 2 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104

Basic block 19: first insn 210, last 216, loop_depth 0, count 0.
Predecessors:  18 (fallthru,crit) 0 (crit)
Successors:  20 (fallthru) 21 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 44 45 46
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 44 45 46 92

Basic block 20: first insn 306, last 221, loop_depth 0, count 0.
Predecessors:  19 (fallthru)
Successors:  21 (fallthru,crit) 22 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 44 45 46 92
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 44 45 46

Basic block 21: first insn 224, last 240, loop_depth 0, count 0.
Predecessors:  20 (fallthru,crit) 19 (crit)
Successors:  22 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 44 45 46
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 46

Basic block 22: first insn 241, last 254, loop_depth 0, count 0.
Predecessors:  21 (fallthru) 20 (crit)
Successors:  23 (fallthru) 24 (crit)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 46
Registers live at end: 6 [bp] 7 [sp] 20 [frame] 46

Basic block 23: first insn 309, last 267, loop_depth 0, count 0.
Predecessors:  22 (fallthru)
Successors:  24 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame] 46
Registers live at end: 6 [bp] 7 [sp] 20 [frame]

Basic block 24: first insn 268, last 310, loop_depth 0, count 0.
Predecessors:  23 (fallthru) 22 (crit)
Successors:  EXIT (fallthru)
Registers live at start: 6 [bp] 7 [sp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 20 [frame]

;; Register 53 in 0.
;; Register 54 in 0.
;; Register 55 in 0.
;; Register 57 in 1.
;; Register 58 in 0.
;; Register 59 in 0.
;; Register 61 in 0.
;; Register 62 in 0.
;; Register 65 in 1.
;; Register 66 in 0.
;; Register 67 in 0.
;; Register 70 in 0.
;; Register 72 in 0.
;; Register 74 in 0.
;; Register 75 in 0.
;; Register 76 in 0.
;; Register 78 in 0.
;; Register 79 in 0.
;; Register 80 in 0.
;; Register 82 in 1.
;; Register 83 in 0.
;; Register 84 in 0.
;; Register 86 in 8.
;; Register 87 in 8.
;; Register 89 in 8.
;; Register 91 in 8.
;; Register 93 in 8.
;; Register 96 in 8.
;; Register 99 in 8.
;; Register 101 in 9.
;; Register 102 in 8.
(note 2 0 289 NOTE_INSN_DELETED 0)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp] 16 [] 20 [frame]
(note 289 2 4 [bb 0] NOTE_INSN_BASIC_BLOCK 0)

(insn 4 289 6 (set (reg/v:SI 42)
        (mem/f:SI (reg:SI 16 argp) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem/f:SI (reg:SI 16 argp) 0)
        (nil)))

(insn 6 4 8 (set (reg/v:SI 43)
        (mem/f:SI (plus:SI (reg:SI 16 argp)
                (const_int 4 [0x4])) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 16 argp)
                (const_int 4 [0x4])) 0)
        (nil)))

(insn 8 6 9 (set (reg/v:SI 44)
        (mem/f:SI (plus:SI (reg:SI 16 argp)
                (const_int 8 [0x8])) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 16 argp)
        (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 16 argp)
                    (const_int 8 [0x8])) 0)
            (nil))))

(note 9 8 12 NOTE_INSN_FUNCTION_BEG 0)

(note 12 9 15 0x400f6340 NOTE_INSN_BLOCK_BEG 0)

(insn 15 12 18 (set (reg/v:DF 46)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC34")) 0)) 63 {*movdf_integer} (nil)
    (nil))

(insn 18 15 24 (set (reg/v:DF 45)
        (reg/v:DF 46)) 63 {*movdf_integer} (insn_list 15 (nil))
    (nil))

(insn 24 18 274 (set (reg/v:SI 48)
        (const_int 0 [0x0])) 33 {*movsi_1} (nil)
    (nil))

(insn 274 24 275 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 48)
            (reg/v:SI 44))) 2 {*cmpsi_1_insn} (insn_list 8 (insn_list 24 (nil)))
    (nil))

(jump_insn 275 274 325 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 288 {*jcc_1} (insn_list 274 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48
(note 325 275 324 [bb 1] NOTE_INSN_BASIC_BLOCK 0)

(insn 324 325 25 (set (reg/v:DF 104)
        (reg/v:DF 46)) 63 {*movdf_integer} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104

(note 25 324 31 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104
(code_label 31 25 290 141 "" "" [1 uses])

(note 290 31 36 [bb 2] NOTE_INSN_BASIC_BLOCK 0)

(insn 36 290 279 (set (reg/v:SI 51)
        (const_int 0 [0x0])) 33 {*movsi_1} (nil)
    (nil))

(insn 279 36 280 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 51)
            (reg/v:SI 44))) 2 {*cmpsi_1_insn} (insn_list 36 (nil))
    (nil))

(jump_insn 280 279 326 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 288 {*jcc_1} (insn_list 279 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 104

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 104
(note 326 280 321 [bb 3] NOTE_INSN_BASIC_BLOCK 0)

(insn 321 326 37 (set (reg/v:DF 103)
        (reg/v:DF 104)) 63 {*movdf_integer} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

(note 37 321 43 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104
(code_label 43 37 291 145 "" "" [1 uses])

(note 291 43 48 [bb 4] NOTE_INSN_BASIC_BLOCK 0)

(insn 48 291 50 (set (reg/v:SI 50)
        (const_int 0 [0x0])) 33 {*movsi_1} (nil)
    (nil))

(insn 50 48 284 (set (reg/v:DF 47)
        (reg/v:DF 103)) 63 {*movdf_integer} (nil)
    (nil))

(insn 284 50 285 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 50)
            (reg/v:SI 44))) 2 {*cmpsi_1_insn} (insn_list 48 (nil))
    (nil))

(jump_insn 285 284 327 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 288 {*jcc_1} (insn_list 284 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 103 104

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 103 104
(note 327 285 311 [bb 5] NOTE_INSN_BASIC_BLOCK 0)

(insn 311 327 312 (parallel[ 
            (set (reg:SI 61)
                (plus:SI (reg/v:SI 48)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 312 311 313 (parallel[ 
            (set (reg:SI 62)
                (mult:SI (reg/v:SI 48)
                    (reg:SI 61)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 311 (nil))
    (expr_list:REG_DEAD (reg:SI 61)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 313 312 314 NOTE_INSN_DELETED 0)

(insn 314 313 315 (parallel[ 
            (set (reg:SI 65)
                (lshiftrt:SI (reg:SI 62)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 312 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 315 314 316 (parallel[ 
            (set (reg:SI 66)
                (plus:SI (reg:SI 62)
                    (reg:SI 65)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 314 (nil))
    (expr_list:REG_DEAD (reg:SI 62)
        (expr_list:REG_DEAD (reg:SI 65)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn 316 315 317 (parallel[ 
            (set (reg:SI 63)
                (ashiftrt:SI (reg:SI 66)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 315 (nil))
    (expr_list:REG_DEAD (reg:SI 66)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 62)
                    (const_int 2 [0x2]))
                (nil)))))

(insn 317 316 318 (parallel[ 
            (set (reg:SI 70)
                (plus:SI (reg/v:SI 51)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 318 317 51 (parallel[ 
            (set (reg:SI 71)
                (mult:SI (reg/v:SI 51)
                    (reg:SI 70)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 317 (nil))
    (expr_list:REG_DEAD (reg:SI 70)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104

(note 51 318 57 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104
(code_label 57 51 292 149 "" "" [1 uses])

(note 292 57 62 [bb 6] NOTE_INSN_BASIC_BLOCK 0)

(insn 62 292 64 (set (reg/v:SI 49)
        (reg/v:SI 50)) 33 {*movsi_1} (nil)
    (nil))

(insn 64 62 65 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 50)
            (reg/v:SI 48))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 65 64 293 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 288 {*jcc_1} (insn_list 64 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104
(note 293 65 67 [bb 7] NOTE_INSN_BASIC_BLOCK 0)

(insn 67 293 68 (parallel[ 
            (set (reg:SI 53)
                (plus:SI (reg/v:SI 50)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 68 67 70 (parallel[ 
            (set (reg:SI 54)
                (mult:SI (reg/v:SI 50)
                    (reg:SI 53)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 67 (nil))
    (expr_list:REG_DEAD (reg:SI 53)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 70 68 72 NOTE_INSN_DELETED 0)

(insn 72 70 74 (parallel[ 
            (set (reg:SI 57)
                (lshiftrt:SI (reg:SI 54)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 68 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 74 72 76 (parallel[ 
            (set (reg:SI 58)
                (plus:SI (reg:SI 54)
                    (reg:SI 57)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 72 (nil))
    (expr_list:REG_DEAD (reg:SI 54)
        (expr_list:REG_DEAD (reg:SI 57)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn 76 74 78 (parallel[ 
            (set (reg:SI 55)
                (ashiftrt:SI (reg:SI 58)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 74 (nil))
    (expr_list:REG_DEAD (reg:SI 58)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 54)
                    (const_int 2 [0x2]))
                (nil)))))

(insn 78 76 79 (parallel[ 
            (set (reg:SI 59)
                (plus:SI (reg:SI 55)
                    (reg/v:SI 48)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 76 (nil))
    (expr_list:REG_DEAD (reg:SI 55)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 79 78 81 NOTE_INSN_DELETED 0)

(insn 81 79 82 (set (reg:SI 52)
        (plus:SI (mult:SI (reg:SI 59)
                (const_int 8 [0x8]))
            (reg/v:SI 42))) 113 {*lea_0} (insn_list 78 (nil))
    (expr_list:REG_DEAD (reg:SI 59)
        (nil)))

(jump_insn 82 81 83 (set (pc)
        (label_ref 101)) 296 {jump} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

(barrier 83 82 84)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104
(code_label 84 83 294 150 "" "" [1 uses])

(note 294 84 97 [bb 8] NOTE_INSN_BASIC_BLOCK 0)

(insn 97 294 98 (parallel[ 
            (set (reg:SI 67)
                (plus:SI (reg:SI 63)
                    (reg/v:SI 50)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 98 97 100 NOTE_INSN_DELETED 0)

(insn 100 98 101 (set (reg:SI 52)
        (plus:SI (mult:SI (reg:SI 67)
                (const_int 8 [0x8]))
            (reg/v:SI 42))) 113 {*lea_0} (insn_list 97 (nil))
    (expr_list:REG_DEAD (reg:SI 67)
        (nil)))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
(code_label 101 100 295 151 "" "" [1 uses])

(note 295 101 102 [bb 9] NOTE_INSN_BASIC_BLOCK 0)

(insn 102 295 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 51)
            (reg/v:SI 49))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 103 102 296 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 288 {*jcc_1} (insn_list 102 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
(note 296 103 108 [bb 10] NOTE_INSN_BASIC_BLOCK 0)

(note 108 296 110 NOTE_INSN_DELETED 0)

(insn 110 108 112 (parallel[ 
            (set (reg:SI 74)
                (lshiftrt:SI (reg:SI 71)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 112 110 114 (parallel[ 
            (set (reg:SI 75)
                (plus:SI (reg:SI 71)
                    (reg:SI 74)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 110 (nil))
    (expr_list:REG_DEAD (reg:SI 74)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 114 112 116 (parallel[ 
            (set (reg:SI 72)
                (ashiftrt:SI (reg:SI 75)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 112 (nil))
    (expr_list:REG_DEAD (reg:SI 75)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 71)
                    (const_int 2 [0x2]))
                (nil)))))

(insn 116 114 117 (parallel[ 
            (set (reg:SI 76)
                (plus:SI (reg:SI 72)
                    (reg/v:SI 49)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 114 (nil))
    (expr_list:REG_DEAD (reg:SI 72)
        (expr_list:REG_DEAD (reg/v:SI 49)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note 117 116 119 NOTE_INSN_DELETED 0)

(insn 119 117 120 (set (reg:SI 69)
        (plus:SI (mult:SI (reg:SI 76)
                (const_int 8 [0x8]))
            (reg/v:SI 43))) 113 {*lea_0} (insn_list 116 (nil))
    (expr_list:REG_DEAD (reg:SI 76)
        (nil)))

(jump_insn 120 119 121 (set (pc)
        (label_ref 139)) 296 {jump} (nil)
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104

(barrier 121 120 122)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
(code_label 122 121 297 152 "" "" [1 uses])

(note 297 122 124 [bb 11] NOTE_INSN_BASIC_BLOCK 0)

(insn 124 297 125 (parallel[ 
            (set (reg:SI 78)
                (plus:SI (reg/v:SI 49)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 125 124 127 (parallel[ 
            (set (reg:SI 79)
                (mult:SI (reg/v:SI 49)
                    (reg:SI 78)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 124 (nil))
    (expr_list:REG_DEAD (reg/v:SI 49)
        (expr_list:REG_DEAD (reg:SI 78)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note 127 125 129 NOTE_INSN_DELETED 0)

(insn 129 127 131 (parallel[ 
            (set (reg:SI 82)
                (lshiftrt:SI (reg:SI 79)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 125 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 131 129 133 (parallel[ 
            (set (reg:SI 83)
                (plus:SI (reg:SI 79)
                    (reg:SI 82)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 129 (nil))
    (expr_list:REG_DEAD (reg:SI 79)
        (expr_list:REG_DEAD (reg:SI 82)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn 133 131 135 (parallel[ 
            (set (reg:SI 80)
                (ashiftrt:SI (reg:SI 83)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 131 (nil))
    (expr_list:REG_DEAD (reg:SI 83)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 79)
                    (const_int 2 [0x2]))
                (nil)))))

(insn 135 133 136 (parallel[ 
            (set (reg:SI 84)
                (plus:SI (reg:SI 80)
                    (reg/v:SI 51)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 133 (nil))
    (expr_list:REG_DEAD (reg:SI 80)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 136 135 138 NOTE_INSN_DELETED 0)

(insn 138 136 139 (set (reg:SI 69)
        (plus:SI (mult:SI (reg:SI 84)
                (const_int 8 [0x8]))
            (reg/v:SI 43))) 113 {*lea_0} (insn_list 135 (nil))
    (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104
(code_label 139 138 298 153 "" "" [1 uses])

(note 298 139 141 [bb 12] NOTE_INSN_BASIC_BLOCK 0)

(insn 141 298 142 (set (reg:DF 87)
        (mem:DF (reg:SI 52) 0)) 63 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:SI 52)
        (nil)))

(insn 142 141 143 (set (reg:DF 86)
        (mult:DF (reg:DF 87)
            (mem:DF (reg:SI 69) 0))) 314 {*fop_df_comm} (insn_list 141 (nil))
    (expr_list:REG_DEAD (reg:DF 87)
        (expr_list:REG_DEAD (reg:SI 69)
            (nil))))

(insn 143 142 146 (set (reg/v:DF 47)
        (plus:DF (reg/v:DF 47)
            (reg:DF 86))) 314 {*fop_df_comm} (insn_list 142 (nil))
    (expr_list:REG_DEAD (reg:DF 86)
        (nil)))

(note 146 143 149 NOTE_INSN_LOOP_CONT 0)

(insn 149 146 288 (parallel[ 
            (set (reg/v:SI 50)
                (plus:SI (reg/v:SI 50)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 288 149 53 NOTE_INSN_LOOP_VTOP 0)

(insn 53 288 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 50)
            (reg/v:SI 44))) 2 {*cmpsi_1_insn} (insn_list 149 (nil))
    (nil))

(jump_insn 54 53 155 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 288 {*jcc_1} (insn_list 53 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104

(note 155 54 156 NOTE_INSN_LOOP_END 0)

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
(code_label 156 155 299 147 "" "" [1 uses])

(note 299 156 158 [bb 13] NOTE_INSN_BASIC_BLOCK 0)

(insn 158 299 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 48)
            (reg/v:SI 51))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 159 158 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 288 {*jcc_1} (insn_list 158 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

(note 160 159 300 0x400f4100 NOTE_INSN_BLOCK_BEG 0)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
(note 300 160 162 [bb 14] NOTE_INSN_BASIC_BLOCK 0)

(insn/i 162 300 168 (parallel[ 
            (set (reg:DF 89)
                (abs:DF (reg/v:DF 47)))
            (clobber (reg:CC 17 flags))
        ] ) 219 {*absdf2_if} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 168 162 169 0x400f4100 NOTE_INSN_BLOCK_END 0)

(insn 169 168 170 (set (reg/v:DF 45)
        (plus:DF (reg/v:DF 45)
            (reg:DF 89))) 314 {*fop_df_comm} (insn_list 162 (nil))
    (expr_list:REG_DEAD (reg:DF 89)
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
(code_label 170 169 301 155 "" "" [1 uses])

(note 301 170 172 [bb 15] NOTE_INSN_BASIC_BLOCK 0)

(insn 172 301 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 48)
            (reg/v:SI 51))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 173 172 174 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 288 {*jcc_1} (insn_list 172 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3999 [0xf9f])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

(note 174 173 302 0x400f4380 NOTE_INSN_BLOCK_BEG 0)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104
(note 302 174 176 [bb 16] NOTE_INSN_BASIC_BLOCK 0)

(insn/i 176 302 182 (parallel[ 
            (set (reg:DF 91)
                (abs:DF (reg/v:DF 47)))
            (clobber (reg:CC 17 flags))
        ] ) 219 {*absdf2_if} (nil)
    (expr_list:REG_DEAD (reg/v:DF 47)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 182 176 183 0x400f4380 NOTE_INSN_BLOCK_END 0)

(insn 183 182 187 (set (reg/v:DF 46)
        (plus:DF (reg/v:DF 46)
            (reg:DF 91))) 314 {*fop_df_comm} (insn_list 176 (nil))
    (expr_list:REG_DEAD (reg:DF 91)
        (nil)))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

(note 187 183 188 NOTE_INSN_LOOP_CONT 0)

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104
(code_label 188 187 303 144 "" "" [1 uses])

(note 303 188 190 [bb 17] NOTE_INSN_BASIC_BLOCK 0)

(insn 190 303 283 (parallel[ 
            (set (reg/v:SI 51)
                (plus:SI (reg/v:SI 51)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 283 190 39 NOTE_INSN_LOOP_VTOP 0)

(insn 39 283 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 51)
            (reg/v:SI 44))) 2 {*cmpsi_1_insn} (insn_list 190 (nil))
    (nil))

(jump_insn 40 39 196 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 288 {*jcc_1} (insn_list 39 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

(note 196 40 200 NOTE_INSN_LOOP_END 0)

(note 200 196 201 NOTE_INSN_LOOP_CONT 0)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104
(code_label 201 200 304 140 "" "" [1 uses])

(note 304 201 203 [bb 18] NOTE_INSN_BASIC_BLOCK 0)

(insn 203 304 278 (parallel[ 
            (set (reg/v:SI 48)
                (plus:SI (reg/v:SI 48)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 278 203 27 NOTE_INSN_LOOP_VTOP 0)

(insn 27 278 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 48)
            (reg/v:SI 44))) 2 {*cmpsi_1_insn} (insn_list 203 (nil))
    (nil))

(jump_insn 28 27 209 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 288 {*jcc_1} (insn_list 27 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104

(note 209 28 210 NOTE_INSN_LOOP_END 0)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 20 [frame] 44 45 46
(code_label 210 209 305 139 "" "" [1 uses])

(note 305 210 212 [bb 19] NOTE_INSN_BASIC_BLOCK 0)

(insn 212 305 214 (set (reg:DF 92)
        (float:DF (reg/v:SI 44))) 104 {floatsidf2} (nil)
    (nil))

(note 214 212 215 NOTE_INSN_DELETED 0)

(insn 215 214 216 (set (reg:DF 93)
        (mult:DF (reg:DF 92)
            (mem/u/f:DF (symbol_ref/u:SI ("*.LC35")) 0))) 314 {*fop_df_comm} (insn_list 212 (nil))
    (nil))

(jump_insn 216 215 306 (parallel[ 
            (set (pc)
                (if_then_else (lt:CCFPU (reg/v:DF 45)
                        (reg:DF 93))
                    (label_ref 224)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) 294 {*fp_jcc_5} (insn_list 215 (nil))
    (expr_list:REG_DEAD (reg:DF 93)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (scratch:HI)
                    (nil))))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 20 [frame] 44 45 46 92

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 20 [frame] 44 45 46 92
(note 306 216 219 [bb 20] NOTE_INSN_BASIC_BLOCK 0)

(note 219 306 220 NOTE_INSN_DELETED 0)

(insn 220 219 221 (set (reg:DF 96)
        (mult:DF (reg:DF 92)
            (mem/u/f:DF (symbol_ref/u:SI ("*.LC36")) 0))) 314 {*fop_df_comm} (nil)
    (expr_list:REG_DEAD (reg:DF 92)
        (nil)))

(jump_insn 221 220 224 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg/v:DF 45)
                        (reg:DF 96))
                    (pc)
                    (label_ref 241)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) 295 {*fp_jcc_6} (insn_list 220 (nil))
    (expr_list:REG_DEAD (reg:DF 96)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (scratch:HI)
                    (nil))))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 20 [frame] 44 45 46

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 20 [frame] 44 45 46
(code_label 224 221 307 162 "" "" [1 uses])

(note 307 224 226 [bb 21] NOTE_INSN_BASIC_BLOCK 0)

(note 226 307 229 0x400f4ce0 NOTE_INSN_BLOCK_BEG 0)

(insn 229 226 230 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 230 229 231 NOTE_INSN_DELETED 0)

(insn 231 230 233 (set (reg:DF 99)
        (div:DF (reg/v:DF 45)
            (float:DF (reg/v:SI 44)))) 321 {*fop_df_3} (nil)
    (expr_list:REG_DEAD (reg/v:SI 44)
        (expr_list:REG_DEAD (reg/v:DF 45)
            (nil))))

(insn 233 231 235 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:DF 99)) 61 {*pushdf_integer} (insn_list 229 (insn_list 231 (nil)))
    (expr_list:REG_DEAD (reg:DF 99)
        (nil)))

(insn 235 233 236 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC37"))) 27 {pushsi2} (nil)
    (nil))

(call_insn 236 235 238 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("printf")) 0)
            (const_int 16 [0x10]))) 369 {*call_value_0} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 eax)
        (nil))
    (nil))

(note 238 236 240 0x400f4ce0 NOTE_INSN_BLOCK_END 0)

(insn 240 238 241 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 20 [frame] 46

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 20 [frame] 46
(code_label 241 240 308 161 "" "" [1 uses])

(note 308 241 243 [bb 22] NOTE_INSN_BASIC_BLOCK 0)

(note 243 308 245 0x400f4e40 NOTE_INSN_BLOCK_BEG 0)

(insn/i 245 243 251 (parallel[ 
            (set (reg:DF 101)
                (abs:DF (reg/v:DF 46)))
            (clobber (reg:CC 17 flags))
        ] ) 219 {*absdf2_if} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 251 245 253 0x400f4e40 NOTE_INSN_BLOCK_END 0)

(insn 253 251 254 (set (reg:DF 102)
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC38")) 0)) 63 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC38")) 0) 1744830464 [0x68000000] 391701017 [0x1758e219] 1072812471 [0x3ff1d1b7])
        (nil)))

(jump_insn 254 253 309 (parallel[ 
            (set (pc)
                (if_then_else (gt:CCFPU (reg:DF 101)
                        (reg:DF 102))
                    (pc)
                    (label_ref 268)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
            (clobber (scratch:HI))
        ] ) 295 {*fp_jcc_6} (insn_list 245 (insn_list 253 (nil)))
    (expr_list:REG_DEAD (reg:DF 101)
        (expr_list:REG_DEAD (reg:DF 102)
            (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (scratch:HI)
                        (nil)))))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 20 [frame] 46

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 20 [frame] 46
(note 309 254 260 [bb 23] NOTE_INSN_BASIC_BLOCK 0)

(insn 260 309 262 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 262 260 264 (set (mem/f:DF (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg/v:DF 46)) 61 {*pushdf_integer} (insn_list 260 (nil))
    (expr_list:REG_DEAD (reg/v:DF 46)
        (nil)))

(insn 264 262 265 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC39"))) 27 {pushsi2} (nil)
    (nil))

(call_insn 265 264 267 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("printf")) 0)
            (const_int 16 [0x10]))) 369 {*call_value_0} (nil)
    (expr_list:REG_UNUSED (reg:SI 0 eax)
        (nil))
    (nil))

(insn 267 265 268 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 20 [frame]
(code_label 268 267 310 163 "" "" [1 uses])

(note 310 268 270 [bb 24] NOTE_INSN_BASIC_BLOCK 0)
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 20 [frame]

(note 270 310 0 0x400f6340 NOTE_INSN_BLOCK_END 0)

