
;; Function ran1

(note 2 0 339 NOTE_INSN_DELETED 0)

;; Start of basic block 0, registers live: 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 339 2 412 [bb 0] NOTE_INSN_BASIC_BLOCK 0)

(insn/f 412 339 414 (set (mem:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 6 ebp)) -1 (nil)
    (nil))

(insn/f 414 412 415 (set (reg:SI 6 ebp)
        (reg:SI 7 esp)) -1 (nil)
    (nil))

(insn/f 415 414 416 (set (mem:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 5 edi)) -1 (nil)
    (expr_list:REG_DEAD (reg:SI 5 edi)
        (nil)))

(insn/f 416 415 417 (set (mem:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 4 esi)) -1 (nil)
    (expr_list:REG_DEAD (reg:SI 4 esi)
        (nil)))

(insn/f 417 416 418 (set (mem:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (reg:SI 3 ebx)) -1 (nil)
    (expr_list:REG_DEAD (reg:SI 3 ebx)
        (nil)))

(insn/f 418 417 419 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) 0))
        ] ) -1 (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 419 418 4 NOTE_INSN_PROLOGUE_END 0)

(insn 4 419 5 (set (reg/v:SI 5 edi)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 8 [0x8])) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 8 [0x8])) 0)
        (nil)))

(note 5 4 8 NOTE_INSN_FUNCTION_BEG 0)

(note 8 5 11 0x4003cac0 NOTE_INSN_BLOCK_BEG 0)

(insn 11 8 12 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem:SI (reg/v:SI 5 edi) 0)
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (insn_list 4 (insn_list 4 (nil)))
    (nil))

(jump_insn 12 11 340 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 288 {*jcc_1} (insn_list 11 (insn_list 11 (nil)))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 0, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 1, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 340 12 13 [bb 1] NOTE_INSN_BASIC_BLOCK 0)

(insn 13 340 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:SI (symbol_ref:SI ("iy.0")) 0)
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 14 13 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 175)
            (pc))) 288 {*jcc_1} (insn_list 13 (insn_list 13 (nil)))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 1, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 2, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 17 14 341 4 "" "" [1 uses])

(note 341 17 22 [bb 2] NOTE_INSN_BASIC_BLOCK 0)

(insn 22 341 23 (set (reg:SI 0 eax)
        (mem:SI (reg/v:SI 5 edi) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/v:SI 5 edi) 0)
        (nil)))

(insn 23 22 24 (parallel[ 
            (set (reg:SI 0 eax)
                (neg:SI (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 203 {*negsi2_1} (insn_list 22 (insn_list 22 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (neg:SI (mem:SI (reg/v:SI 5 edi) 0))
            (nil))))

(insn 24 23 25 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 eax)
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (insn_list 23 (insn_list 23 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))

(jump_insn 25 24 342 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 288 {*jcc_1} (insn_list 24 (insn_list 24 (nil)))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 2, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 3, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 342 25 27 [bb 3] NOTE_INSN_BASIC_BLOCK 0)

(insn 27 342 28 (set (mem:SI (reg/v:SI 5 edi) 0)
        (const_int 1 [0x1])) 33 {*movsi_1} (nil)
    (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 37)) 296 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 29 28 30)

;; Start of basic block 4, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 30 29 343 5 "" "" [1 uses])

(note 343 30 33 [bb 4] NOTE_INSN_BASIC_BLOCK 0)

(note 33 343 34 NOTE_INSN_DELETED 0)

(note 34 33 36 NOTE_INSN_DELETED 0)

(insn 36 34 37 (parallel[ 
            (set (mem:SI (reg/v:SI 5 edi) 0)
                (neg:SI (mem:SI (reg/v:SI 5 edi) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 203 {*negsi2_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 4, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 5, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 37 36 344 6 "" "" [1 uses])

(note 344 37 40 [bb 5] NOTE_INSN_BASIC_BLOCK 0)

(insn 40 344 41 (set (reg/v:SI 4 esi)
        (const_int 39 [0x27])) 33 {*movsi_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(note 41 40 47 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 6, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 47 41 345 10 "" "" [1 uses])

(note 345 47 52 [bb 6] NOTE_INSN_BASIC_BLOCK 0)

(insn 52 345 54 (set (reg:SI 2 ecx)
        (mem:SI (reg/v:SI 5 edi) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/v:SI 5 edi) 0)
        (nil)))

(insn 54 52 55 (set (reg:SI 0 eax)
        (const_int -2092037281 [0x834e0b5f])) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (const_int -2092037281 [0x834e0b5f])
        (nil)))

(insn 55 54 57 (parallel[ 
            (set (reg:DI 0 eax)
                (mult:DI (sign_extend:DI (reg:SI 0 eax))
                    (sign_extend:DI (reg:SI 2 ecx))))
            (clobber (reg:CC 17 flags))
        ] ) 153 {mulsidi3} (insn_list 52 (insn_list 54 (insn_list 52 (insn_list 54 (nil)))))
    (expr_list:REG_UNUSED (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 57 55 368 (set (reg:SI 0 eax)
        (plus:SI (reg:SI 2 ecx)
            (reg:SI 1 edx))) -1 (insn_list 55 (nil))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (nil)))

(insn 368 57 59 (set (reg:SI 3 ebx)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 57 (nil))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))

(insn 59 368 371 (parallel[ 
            (set (reg:SI 3 ebx)
                (ashiftrt:SI (reg:SI 3 ebx)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 368 (insn_list 57 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 371 59 61 (set (reg:SI 0 eax)
        (reg:SI 2 ecx)) 33 {*movsi_1} (nil)
    (nil))

(insn 61 371 63 (parallel[ 
            (set (reg:SI 1 edx)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 247 {ashrsi3_31} (insn_list 371 (nil))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 63 61 374 (parallel[ 
            (set (reg/v:SI 3 ebx)
                (minus:SI (reg:SI 3 ebx)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 59 (insn_list 61 (insn_list 59 (insn_list 61 (nil)))))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 2 ecx)
                    (const_int 127773 [0x1f31d]))
                (nil)))))

(insn 374 63 68 (set (reg:SI 1 edx)
        (reg/v:SI 3 ebx)) 33 {*movsi_1} (insn_list 63 (nil))
    (nil))

(insn 68 374 70 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 374 (insn_list 63 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 128 [0x80]))
            (nil))))

(insn 70 68 72 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 68 (insn_list 68 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 127 [0x7f]))
            (nil))))

(insn 72 70 74 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 70 (insn_list 70 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 508 [0x1fc]))
            (nil))))

(insn 74 72 76 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 72 (insn_list 72 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 507 [0x1fb]))
            (nil))))

(insn 76 74 78 (set (reg:SI 0 eax)
        (mult:SI (reg:SI 1 edx)
            (const_int 8 [0x8]))) -1 (insn_list 74 (insn_list 74 (nil)))
    (nil))

(insn 78 76 80 (parallel[ 
            (set (reg:SI 0 eax)
                (minus:SI (reg:SI 0 eax)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 76 (insn_list 76 (nil)))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                    (const_int 3549 [0xddd]))
                (nil)))))

(note 80 78 82 NOTE_INSN_DELETED 0)

(insn 82 80 84 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 4 [0x4]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (insn_list 78 (insn_list 78 (nil)))
    (nil))

(note 84 82 86 NOTE_INSN_DELETED 0)

(insn 86 84 89 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 0 eax))) 113 {*lea_0} (insn_list 82 (insn_list 82 (nil)))
    (nil))

(insn 89 86 377 (parallel[ 
            (set (reg:SI 2 ecx)
                (minus:SI (reg:SI 2 ecx)
                    (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 86 (insn_list 86 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem:SI (reg/v:SI 5 edi) 0)
                    (reg:SI 0 eax))
                (nil)))))

(insn 377 89 93 (set (reg:SI 1 edx)
        (reg:SI 2 ecx)) 33 {*movsi_1} (insn_list 89 (nil))
    (nil))

(insn 93 377 95 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 377 (insn_list 89 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                (const_int 64 [0x40]))
            (nil))))

(insn 95 93 97 (parallel[ 
            (set (reg:SI 1 edx)
                (plus:SI (reg:SI 1 edx)
                    (reg:SI 2 ecx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 93 (insn_list 93 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                (const_int 65 [0x41]))
            (nil))))

(note 97 95 99 NOTE_INSN_DELETED 0)

(insn 99 97 101 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 1 edx)
                (const_int 2 [0x2]))
            (reg:SI 2 ecx))) 113 {*lea_0} (insn_list 95 (insn_list 95 (nil)))
    (nil))

(note 101 99 103 NOTE_INSN_DELETED 0)

(insn 103 101 105 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 1 edx)
                (const_int 4 [0x4]))
            (reg:SI 2 ecx))) 113 {*lea_0} (insn_list 99 (insn_list 99 (nil)))
    (nil))

(note 105 103 107 NOTE_INSN_DELETED 0)

(insn 107 105 109 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 1 edx)
                (const_int 4 [0x4]))
            (reg:SI 2 ecx))) 113 {*lea_0} (insn_list 103 (insn_list 103 (nil)))
    (nil))

(insn 109 107 111 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 107 (insn_list 107 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                (const_int 16808 [0x41a8]))
            (nil))))

(insn 111 109 115 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg:SI 2 ecx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 109 (insn_list 109 (nil)))
    (expr_list:REG_DEAD (reg:SI 2 ecx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                    (const_int 16807 [0x41a7]))
                (nil)))))

(note 115 111 117 NOTE_INSN_DELETED 0)

(insn 117 115 119 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg/v:SI 3 ebx)
                (const_int 4 [0x4]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (nil)
    (nil))

(note 119 117 121 NOTE_INSN_DELETED 0)

(insn 121 119 123 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 2 [0x2]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (insn_list 117 (insn_list 117 (nil)))
    (nil))

(insn 123 121 125 (parallel[ 
            (set (reg:SI 0 eax)
                (ashift:SI (reg:SI 0 eax)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 121 (insn_list 121 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 176 [0xb0]))
            (nil))))

(insn 125 123 127 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 123 (insn_list 123 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 177 [0xb1]))
            (nil))))

(note 127 125 129 NOTE_INSN_DELETED 0)

(insn 129 127 131 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 4 [0x4]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (insn_list 125 (insn_list 125 (nil)))
    (expr_list:REG_DEAD (reg/v:SI 3 ebx)
        (nil)))

(insn 131 129 133 (parallel[ 
            (set (reg:SI 0 eax)
                (ashift:SI (reg:SI 0 eax)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 129 (insn_list 129 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 2836 [0xb14]))
            (nil))))

(insn 133 131 380 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 111 (insn_list 131 (insn_list 111 (insn_list 131 (nil)))))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 380 133 135 (set (reg:SI 0 eax)
        (reg:SI 1 edx)) 33 {*movsi_1} (insn_list 133 (nil))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (nil)))

(insn 135 380 137 (set (mem:SI (reg/v:SI 5 edi) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 380 (insn_list 133 (nil)))
    (nil))

(insn 137 135 138 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 eax)
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 138 137 346 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 288 {*jcc_1} (insn_list 137 (insn_list 137 (nil)))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 6, registers live:
 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 7, registers live: 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 346 138 141 [bb 7] NOTE_INSN_BASIC_BLOCK 0)

(insn 141 346 143 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (reg/v:SI 5 edi) 0)
            (expr_list:REG_EQUAL (plus:SI (mem:SI (reg/v:SI 5 edi) 0)
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))

(insn 143 141 144 (set (mem:SI (reg/v:SI 5 edi) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 141 (insn_list 141 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))
;; End of basic block 7, registers live:
 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 8, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 144 143 347 11 "" "" [1 uses])

(note 347 144 146 [bb 8] NOTE_INSN_BASIC_BLOCK 0)

(insn 146 347 147 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 4 esi)
            (const_int 31 [0x1f]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 147 146 148 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 288 {*jcc_1} (insn_list 146 (insn_list 146 (nil)))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8, registers live:
 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(note 148 147 348 NOTE_INSN_DELETED 0)

;; Start of basic block 9, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 348 148 152 [bb 9] NOTE_INSN_BASIC_BLOCK 0)

(insn 152 348 153 (set (reg:SI 0 eax)
        (mem:SI (reg/v:SI 5 edi) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/v:SI 5 edi) 0)
        (nil)))

(insn 153 152 157 (set (mem/s:SI (plus:SI (mult:SI (reg/v:SI 4 esi)
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("iv.1"))) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 152 (insn_list 152 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))
;; End of basic block 9, registers live:
 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(note 157 153 158 NOTE_INSN_LOOP_CONT 0)

;; Start of basic block 10, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 158 157 349 9 "" "" [1 uses])

(note 349 158 160 [bb 10] NOTE_INSN_BASIC_BLOCK 0)

(note 160 349 338 NOTE_INSN_DELETED 0)

(note 338 160 43 NOTE_INSN_LOOP_VTOP 0)

(insn 43 338 44 (parallel[ 
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg/v:SI 4 esi)
                        (const_int -1 [0xffffffff]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 4 esi)
                (plus:SI (reg/v:SI 4 esi)
                    (const_int -1 [0xffffffff])))
        ] ) 118 {*addsi_2} (nil)
    (nil))

(jump_insn 44 43 166 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 288 {*jcc_1} (insn_list 43 (insn_list 43 (nil)))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 10, registers live:
 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(note 166 44 350 NOTE_INSN_LOOP_END 0)

;; Start of basic block 11, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 350 166 172 [bb 11] NOTE_INSN_BASIC_BLOCK 0)

(insn 172 350 173 (set (reg:SI 0 eax)
        (mem/s:SI (symbol_ref:SI ("iv.1")) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (symbol_ref:SI ("iv.1")) 0)
        (nil)))

(insn 173 172 175 (set (mem/f:SI (symbol_ref:SI ("iy.0")) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 172 (insn_list 172 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))
;; End of basic block 11, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 12, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 175 173 351 3 "" "" [1 uses])

(note 351 175 178 [bb 12] NOTE_INSN_BASIC_BLOCK 0)

(insn 178 351 180 (set (reg:SI 2 ecx)
        (mem:SI (reg/v:SI 5 edi) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/v:SI 5 edi) 0)
        (nil)))

(insn 180 178 181 (set (reg:SI 0 eax)
        (const_int -2092037281 [0x834e0b5f])) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (const_int -2092037281 [0x834e0b5f])
        (nil)))

(insn 181 180 183 (parallel[ 
            (set (reg:DI 0 eax)
                (mult:DI (sign_extend:DI (reg:SI 0 eax))
                    (sign_extend:DI (reg:SI 2 ecx))))
            (clobber (reg:CC 17 flags))
        ] ) 153 {mulsidi3} (insn_list 178 (insn_list 180 (insn_list 178 (insn_list 180 (nil)))))
    (expr_list:REG_UNUSED (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 183 181 383 (set (reg:SI 0 eax)
        (plus:SI (reg:SI 2 ecx)
            (reg:SI 1 edx))) -1 (insn_list 181 (nil))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (nil)))

(insn 383 183 185 (set (reg:SI 3 ebx)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 183 (nil))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))

(insn 185 383 386 (parallel[ 
            (set (reg:SI 3 ebx)
                (ashiftrt:SI (reg:SI 3 ebx)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 383 (insn_list 183 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 386 185 187 (set (reg:SI 0 eax)
        (reg:SI 2 ecx)) 33 {*movsi_1} (nil)
    (nil))

(insn 187 386 189 (parallel[ 
            (set (reg:SI 1 edx)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 247 {ashrsi3_31} (insn_list 386 (nil))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 189 187 389 (parallel[ 
            (set (reg/v:SI 3 ebx)
                (minus:SI (reg:SI 3 ebx)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 185 (insn_list 187 (insn_list 185 (insn_list 187 (nil)))))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 2 ecx)
                    (const_int 127773 [0x1f31d]))
                (nil)))))

(insn 389 189 194 (set (reg:SI 1 edx)
        (reg/v:SI 3 ebx)) 33 {*movsi_1} (insn_list 189 (nil))
    (nil))

(insn 194 389 196 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 389 (insn_list 189 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 128 [0x80]))
            (nil))))

(insn 196 194 198 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 194 (insn_list 194 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 127 [0x7f]))
            (nil))))

(insn 198 196 200 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 196 (insn_list 196 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 508 [0x1fc]))
            (nil))))

(insn 200 198 202 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 198 (insn_list 198 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 507 [0x1fb]))
            (nil))))

(insn 202 200 204 (set (reg:SI 0 eax)
        (mult:SI (reg:SI 1 edx)
            (const_int 8 [0x8]))) -1 (insn_list 200 (insn_list 200 (nil)))
    (nil))

(insn 204 202 206 (parallel[ 
            (set (reg:SI 0 eax)
                (minus:SI (reg:SI 0 eax)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 202 (insn_list 202 (nil)))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                    (const_int 3549 [0xddd]))
                (nil)))))

(note 206 204 208 NOTE_INSN_DELETED 0)

(insn 208 206 210 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 4 [0x4]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (insn_list 204 (insn_list 204 (nil)))
    (nil))

(note 210 208 212 NOTE_INSN_DELETED 0)

(insn 212 210 215 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 0 eax))) 113 {*lea_0} (insn_list 208 (insn_list 208 (nil)))
    (nil))

(insn 215 212 392 (parallel[ 
            (set (reg:SI 2 ecx)
                (minus:SI (reg:SI 2 ecx)
                    (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 212 (insn_list 212 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem:SI (reg/v:SI 5 edi) 0)
                    (reg:SI 0 eax))
                (nil)))))

(insn 392 215 219 (set (reg:SI 1 edx)
        (reg:SI 2 ecx)) 33 {*movsi_1} (insn_list 215 (nil))
    (nil))

(insn 219 392 221 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 392 (insn_list 215 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                (const_int 64 [0x40]))
            (nil))))

(insn 221 219 223 (parallel[ 
            (set (reg:SI 1 edx)
                (plus:SI (reg:SI 1 edx)
                    (reg:SI 2 ecx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 219 (insn_list 219 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                (const_int 65 [0x41]))
            (nil))))

(note 223 221 225 NOTE_INSN_DELETED 0)

(insn 225 223 227 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 1 edx)
                (const_int 2 [0x2]))
            (reg:SI 2 ecx))) 113 {*lea_0} (insn_list 221 (insn_list 221 (nil)))
    (nil))

(note 227 225 229 NOTE_INSN_DELETED 0)

(insn 229 227 231 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 1 edx)
                (const_int 4 [0x4]))
            (reg:SI 2 ecx))) 113 {*lea_0} (insn_list 225 (insn_list 225 (nil)))
    (nil))

(note 231 229 233 NOTE_INSN_DELETED 0)

(insn 233 231 235 (set (reg:SI 1 edx)
        (plus:SI (mult:SI (reg:SI 1 edx)
                (const_int 4 [0x4]))
            (reg:SI 2 ecx))) 113 {*lea_0} (insn_list 229 (insn_list 229 (nil)))
    (nil))

(insn 235 233 237 (parallel[ 
            (set (reg:SI 1 edx)
                (ashift:SI (reg:SI 1 edx)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 233 (insn_list 233 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                (const_int 16808 [0x41a8]))
            (nil))))

(insn 237 235 241 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg:SI 2 ecx)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 235 (insn_list 235 (nil)))
    (expr_list:REG_DEAD (reg:SI 2 ecx)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 2 ecx)
                    (const_int 16807 [0x41a7]))
                (nil)))))

(note 241 237 243 NOTE_INSN_DELETED 0)

(insn 243 241 245 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg/v:SI 3 ebx)
                (const_int 4 [0x4]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (nil)
    (nil))

(note 245 243 247 NOTE_INSN_DELETED 0)

(insn 247 245 249 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 2 [0x2]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (insn_list 243 (insn_list 243 (nil)))
    (nil))

(insn 249 247 251 (parallel[ 
            (set (reg:SI 0 eax)
                (ashift:SI (reg:SI 0 eax)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 247 (insn_list 247 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 176 [0xb0]))
            (nil))))

(insn 251 249 253 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 249 (insn_list 249 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 177 [0xb1]))
            (nil))))

(note 253 251 255 NOTE_INSN_DELETED 0)

(insn 255 253 257 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 4 [0x4]))
            (reg/v:SI 3 ebx))) 113 {*lea_0} (insn_list 251 (insn_list 251 (nil)))
    (expr_list:REG_DEAD (reg/v:SI 3 ebx)
        (nil)))

(insn 257 255 259 (parallel[ 
            (set (reg:SI 0 eax)
                (ashift:SI (reg:SI 0 eax)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ] ) 236 {*ashlsi3_1} (insn_list 255 (insn_list 255 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 3 ebx)
                (const_int 2836 [0xb14]))
            (nil))))

(insn 259 257 395 (parallel[ 
            (set (reg:SI 1 edx)
                (minus:SI (reg:SI 1 edx)
                    (reg:SI 0 eax)))
            (clobber (reg:CC 17 flags))
        ] ) 138 {*subsi_1} (insn_list 237 (insn_list 257 (insn_list 237 (insn_list 257 (nil)))))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 395 259 261 (set (reg:SI 0 eax)
        (reg:SI 1 edx)) 33 {*movsi_1} (insn_list 259 (nil))
    (expr_list:REG_DEAD (reg:SI 1 edx)
        (nil)))

(insn 261 395 263 (set (mem:SI (reg/v:SI 5 edi) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 395 (insn_list 259 (nil)))
    (nil))

(insn 263 261 264 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 eax)
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 264 263 352 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 270)
            (pc))) 288 {*jcc_1} (insn_list 263 (insn_list 263 (nil)))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 12, registers live:
 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 13, registers live: 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 352 264 267 [bb 13] NOTE_INSN_BASIC_BLOCK 0)

(insn 267 352 269 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (reg/v:SI 5 edi) 0)
            (expr_list:REG_EQUAL (plus:SI (mem:SI (reg/v:SI 5 edi) 0)
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))

(insn 269 267 270 (set (mem:SI (reg/v:SI 5 edi) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 267 (insn_list 267 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))
;; End of basic block 13, registers live:
 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 14, registers live: 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 270 269 353 14 "" "" [1 uses])

(note 353 270 273 [bb 14] NOTE_INSN_BASIC_BLOCK 0)

(insn 273 353 276 (set (reg:SI 0 eax)
        (mem/f:SI (symbol_ref:SI ("iy.0")) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 276 273 277 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 eax)
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (insn_list 273 (insn_list 273 (nil)))
    (nil))

(jump_insn 277 276 354 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 280)
            (pc))) 288 {*jcc_1} (insn_list 276 (insn_list 276 (nil)))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
            (nil))))
;; End of basic block 14, registers live:
 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 15, registers live: 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(note 354 277 279 [bb 15] NOTE_INSN_BASIC_BLOCK 0)

(insn 279 354 280 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (const_int 67108863 [0x3ffffff])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 15, registers live:
 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 16, registers live: 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
(code_label 280 279 355 15 "" "" [1 uses])

(note 355 280 398 [bb 16] NOTE_INSN_BASIC_BLOCK 0)

(insn 398 355 282 (set (reg/v:SI 4 esi)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))

(insn 282 398 284 (parallel[ 
            (set (reg/v:SI 4 esi)
                (ashiftrt:SI (reg/v:SI 4 esi)
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 398 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (div:SI (reg:SI 107)
                (const_int 67108864 [0x4000000]))
            (nil))))

(insn 284 282 286 (set (reg:SI 2 ecx)
        (mult:SI (reg/v:SI 4 esi)
            (const_int 4 [0x4]))) -1 (insn_list 282 (insn_list 282 (nil)))
    (expr_list:REG_DEAD (reg/v:SI 4 esi)
        (nil)))

(insn 286 284 288 (set (reg:SI 1 edx)
        (symbol_ref:SI ("iv.1"))) 33 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (symbol_ref:SI ("iv.1"))
        (nil)))

(insn 288 286 289 (set (reg:SI 0 eax)
        (mem/s:SI (plus:SI (reg:SI 1 edx)
                (reg:SI 2 ecx)) 0)) 33 {*movsi_1} (insn_list 284 (insn_list 286 (insn_list 284 (insn_list 286 (nil)))))
    (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg:SI 1 edx)
                (reg:SI 2 ecx)) 0)
        (nil)))

(insn 289 288 295 (set (mem/f:SI (symbol_ref:SI ("iy.0")) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 288 (insn_list 288 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (nil)))

(insn 295 289 296 (set (reg:SI 0 eax)
        (mem:SI (reg/v:SI 5 edi) 0)) 33 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 5 edi)
        (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg:SI 1 edx)
                    (reg:SI 2 ecx)) 0)
            (nil))))

(insn 296 295 298 (set (mem/s:SI (plus:SI (reg:SI 1 edx)
                (reg:SI 2 ecx)) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (insn_list 295 (insn_list 295 (nil)))
    (expr_list:REG_DEAD (reg:SI 0 eax)
        (expr_list:REG_DEAD (reg:SI 1 edx)
            (expr_list:REG_DEAD (reg:SI 2 ecx)
                (nil)))))

(note 298 296 300 NOTE_INSN_DELETED 0)

(insn 300 298 301 (set (reg:DF 8 st(0))
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0)) 63 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC0")) 0) 0 [0x0] 65536 [0x10000] 1071677440 [0x3fe08000])
        (nil)))

(insn 301 300 403 (set (reg:DF 8 st(0))
        (mult:DF (float:DF (mem/f:SI (symbol_ref:SI ("iy.0")) 0))
            (reg:DF 8 st(0)))) 320 {*fop_df_2} (insn_list 300 (insn_list 300 (nil)))
    (nil))

(insn 403 301 404 (set (mem:SF (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)
        (float_truncate:SF (reg:DF 8 st(0)))) -1 (insn_list 301 (nil))
    (expr_list:REG_DEAD (reg:DF 8 st(0))
        (nil)))

(insn 404 403 401 (set (reg:SF 8 st(0))
        (mem:SF (plus:SI (reg:SI 6 ebp)
                (const_int -16 [0xfffffff0])) 0)) -1 (nil)
    (nil))

(insn 401 404 307 (set (reg/v:SF 10 st(2))
        (reg:SF 8 st(0))) 58 {*movsf_1} (insn_list 404 (nil))
    (expr_list:REG_DEAD (reg:SF 8 st(0))
        (nil)))

(insn 307 401 309 (set (reg:DF 9 st(1))
        (float_extend:DF (reg/v:SF 10 st(2)))) 86 {*extendsfdf2_1} (insn_list 401 (insn_list 303 (nil)))
    (nil))

(insn 309 307 405 (set (reg:DF 8 st(0))
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC1")) 0)) 63 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC1")) 0) -939524096 [0xc8000000] -33776998 [0xfdfc9a9a] 1073676287 [0x3ffeffff])
        (nil)))

(insn 405 309 323 (set (reg:HI 0 ax)
        (unspec:HI[ 
                (compare:CCFPU (reg:DF 9 st(1))
                    (reg:DF 8 st(0)))
            ]  9)) -1 (insn_list 307 (insn_list 309 (nil)))
    (expr_list:REG_DEAD (reg:DF 9 st(1))
        (expr_list:REG_DEAD (reg:DF 8 st(0))
            (nil))))

(insn 323 405 406 (set (reg/i:SF 8 st(0))
        (reg/v:SF 10 st(2))) 58 {*movsf_1} (nil)
    (expr_list:REG_DEAD (reg/v:SF 10 st(2))
        (nil)))

(insn 406 323 407 (set (reg:CCNO 17 flags)
        (compare:CCNO (and:SI (zero_extract:SI (reg:HI 0 ax)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (const_int 69 [0x45]))
            (const_int 0 [0x0]))) -1 (insn_list 405 (nil))
    (expr_list:REG_DEAD (reg:HI 0 ax)
        (nil)))

(jump_insn 407 406 356 (set (pc)
        (if_then_else (eq (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 332))) 289 {*jcc_2} (insn_list 406 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 8 [st] 20 [frame]

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 20 [frame]
(note 356 407 315 [bb 17] NOTE_INSN_BASIC_BLOCK 0)

(insn 315 356 328 (set (reg/i:SF 8 st(0))
        (mem/u/f:SF (symbol_ref/u:SI ("*.LC2")) 0)) 58 {*movsf_1} (nil)
    (expr_list:REG_EQUAL (const_double:SF (mem/u/f:SF (symbol_ref/u:SI ("*.LC2")) 0) 0 [0x0] -33554432 [0xfe000000] 1073676287 [0x3ffeffff])
        (nil)))

(note 328 315 332 0x4003cac0 NOTE_INSN_BLOCK_END 0)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 8 [st] 20 [frame]
;; Insn is in multiple basic blocks
(code_label 332 328 358 2 "" "" [1 uses])

;; Insn is in multiple basic blocks
(note 358 332 333 [bb 18] NOTE_INSN_BASIC_BLOCK 0)

;; Insn is in multiple basic blocks
(insn 333 358 420 (use (reg/i:SF 8 st(0))) -1 (nil)
    (nil))

;; Insn is in multiple basic blocks
(note 420 333 421 NOTE_INSN_EPILOGUE_BEG 0)

;; Insn is in multiple basic blocks
(insn 421 420 422 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) 0))
        ] ) -1 (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

;; Insn is in multiple basic blocks
(insn 422 421 423 (parallel[ 
            (set (reg:SI 3 ebx)
                (mem:SI (reg:SI 7 esp) 0))
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
        ] ) -1 (insn_list 421 (nil))
    (nil))

;; Insn is in multiple basic blocks
(insn 423 422 424 (parallel[ 
            (set (reg:SI 4 esi)
                (mem:SI (reg:SI 7 esp) 0))
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
        ] ) -1 (insn_list 422 (nil))
    (nil))

;; Insn is in multiple basic blocks
(insn 424 423 425 (parallel[ 
            (set (reg:SI 5 edi)
                (mem:SI (reg:SI 7 esp) 0))
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
        ] ) -1 (insn_list 423 (nil))
    (nil))

;; Insn is in multiple basic blocks
(insn 425 424 426 (parallel[ 
            (set (reg:SI 6 ebp)
                (mem:SI (reg:SI 7 esp) 0))
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 4 [0x4])))
        ] ) -1 (insn_list 424 (nil))
    (nil))

;; Insn is in multiple basic blocks
(jump_insn 426 425 427 (return) -1 (nil)
    (nil))
;; End of basic block 18, registers live:
 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 20 [frame]

(barrier 427 426 365)

(note 365 427 0 NOTE_INSN_DELETED 0)

