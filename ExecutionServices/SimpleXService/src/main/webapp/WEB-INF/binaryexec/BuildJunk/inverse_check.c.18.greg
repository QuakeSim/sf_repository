
;; Function inverse_check

;; 17 regs to allocate: 69 49 50 52 92 (2) 51 47 (2) 71 48 44 45 (2) 46 (2) 63 103 (2) 43 42 104 (2)
;; 42 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 103 104 0 1 7 8
;; 43 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 103 104 0 1 7 8
;; 44 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 92 93 96 103 104 0 1 7 8
;; 45 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 92 93 96 103 104 0 1 7 8
;; 46 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 92 93 96 99 101 102 103 104 0 1 7 8 9
;; 47 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 103 104 0 1 7 8
;; 48 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 103 104 0 1 7 8
;; 49 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 63 67 71 72 74 75 78 103 104 0 1 7
;; 50 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 103 104 0 1 7 8
;; 51 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 103 104 0 1 7 8
;; 52 conflicts: 42 43 44 45 46 47 48 49 50 51 52 63 69 71 72 74 75 76 78 79 80 82 83 84 103 104 0 1 7
;; 53 conflicts: 42 43 44 45 46 47 48 49 50 51 53 63 71 103 104 0 7
;; 54 conflicts: 42 43 44 45 46 47 48 49 50 51 54 57 63 71 103 104 0 1 7
;; 55 conflicts: 42 43 44 45 46 47 48 49 50 51 55 63 71 103 104 0 7
;; 57 conflicts: 42 43 44 45 46 47 48 49 50 51 54 57 63 71 103 104 0 1 7
;; 58 conflicts: 42 43 44 45 46 47 48 49 50 51 58 63 71 103 104 0 7
;; 59 conflicts: 42 43 44 45 46 47 48 49 50 51 59 63 71 103 104 0 7
;; 61 conflicts: 42 43 44 45 46 47 48 50 51 61 103 104 0 7
;; 62 conflicts: 42 43 44 45 46 47 48 50 51 62 65 103 104 0 1 7
;; 63 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 63 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 103 104 0 1 7 8
;; 65 conflicts: 42 43 44 45 46 47 48 50 51 62 65 103 104 0 1 7
;; 66 conflicts: 42 43 44 45 46 47 48 50 51 66 103 104 0 7
;; 67 conflicts: 42 43 44 45 46 47 48 49 50 51 63 67 71 103 104 0 7
;; 69 conflicts: 42 43 44 45 46 47 48 50 51 52 63 69 71 87 103 104 7 8
;; 69 preferences: 0
;; 70 conflicts: 42 43 44 45 46 47 48 50 51 63 70 103 104 0 7
;; 71 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 63 67 69 71 72 74 75 76 78 79 80 82 83 84 86 87 103 104 0 1 7 8
;; 72 conflicts: 42 43 44 45 46 47 48 49 50 51 52 63 71 72 103 104 0 7
;; 74 conflicts: 42 43 44 45 46 47 48 49 50 51 52 63 71 74 103 104 0 7
;; 75 conflicts: 42 43 44 45 46 47 48 49 50 51 52 63 71 75 103 104 0 7
;; 76 conflicts: 42 43 44 45 46 47 48 50 51 52 63 71 76 103 104 0 7
;; 78 conflicts: 42 43 44 45 46 47 48 49 50 51 52 63 71 78 103 104 0 7
;; 79 conflicts: 42 43 44 45 46 47 48 50 51 52 63 71 79 82 103 104 0 1 7
;; 80 conflicts: 42 43 44 45 46 47 48 50 51 52 63 71 80 103 104 0 7
;; 82 conflicts: 42 43 44 45 46 47 48 50 51 52 63 71 79 82 103 104 0 1 7
;; 83 conflicts: 42 43 44 45 46 47 48 50 51 52 63 71 83 103 104 0 7
;; 84 conflicts: 42 43 44 45 46 47 48 50 51 52 63 71 84 103 104 0 7
;; 86 conflicts: 42 43 44 45 46 47 48 50 51 63 71 86 103 104 7 8
;; 87 conflicts: 42 43 44 45 46 47 48 50 51 63 69 71 87 103 104 7 8
;; 89 conflicts: 42 43 44 45 46 47 48 51 89 103 104 7 8
;; 91 conflicts: 42 43 44 45 46 48 51 91 103 104 7 8
;; 92 conflicts: 44 45 46 92 93 7 8
;; 93 conflicts: 44 45 46 92 93 7 8
;; 96 conflicts: 44 45 46 96 7 8
;; 99 conflicts: 46 99 7 8
;; 101 conflicts: 46 101 102 7 8 9
;; 102 conflicts: 46 101 102 7 8 9
;; 103 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 103 104 0 1 7 8
;; 104 conflicts: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 61 62 63 65 66 67 69 70 71 72 74 75 76 78 79 80 82 83 84 86 87 89 91 103 104 0 1 7 8

Spilling for insn 4.
Using reg 0 for reload 0
Spilling for insn 6.
Using reg 0 for reload 0
Spilling for insn 8.
Using reg 0 for reload 0
Spilling for insn 15.
Using reg 8 for reload 0
Spilling for insn 18.
Spilling for insn 24.
Spilling for insn 274.
Using reg 0 for reload 1
Spilling for insn 324.
Spilling for insn 279.
Spilling for insn 284.
Spilling for insn 311.
Spilling for insn 312.
Spilling for insn 314.
Spilling for insn 316.
Spilling for insn 318.
Spilling for insn 64.
Spilling for insn 72.
Spilling for insn 78.
Spilling for insn 81.
Using reg 1 for reload 0
Spilling for insn 97.
Spilling for insn 100.
Using reg 1 for reload 0
Spilling for insn 110.
Spilling for insn 112.
Spilling for insn 119.
Using reg 1 for reload 0
Spilling for insn 129.
Spilling for insn 138.
Using reg 1 for reload 0
Spilling for insn 141.
Spilling for insn 142.
Spilling for insn 53.
Spilling for insn 158.
Spilling for insn 162.
Spilling for insn 172.
Spilling for insn 176.
Spilling for insn 183.
Spilling for insn 39.
Spilling for insn 203.
Spilling for insn 27.
Using reg 0 for reload 1
Spilling for insn 215.
Spilling for insn 216.
Using reg 0 for reload 0
Spilling for insn 220.
Spilling for insn 221.
Using reg 0 for reload 0
Spilling for insn 231.
Spilling for insn 233.
Spilling for insn 235.
Spilling for insn 245.
Spilling for insn 253.
Spilling for insn 254.
Using reg 0 for reload 0
Spilling for insn 262.
Spilling for insn 264.
;; Register dispositions:
45 in 10  47 in 9  49 in 2  50 in 3  51 in 5  52 in 4  
53 in 0  54 in 0  55 in 0  57 in 1  58 in 0  59 in 0  
61 in 0  62 in 0  65 in 1  66 in 0  67 in 0  69 in 0  
70 in 0  72 in 0  74 in 0  75 in 0  76 in 0  78 in 0  
79 in 0  80 in 0  82 in 1  83 in 0  84 in 0  86 in 8  
87 in 8  89 in 8  91 in 8  92 in 9  93 in 8  96 in 8  
99 in 8  101 in 9  102 in 8  103 in 11  104 in 12  

;; Hard regs used:  0 1 2 3 4 5 6 7 8 9 10 11 12 16 17 18 20

(note 2 0 289 NOTE_INSN_DELETED 0)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp]
(note 289 2 4 [bb 0] NOTE_INSN_BASIC_BLOCK 0)

(note 4 289 6 NOTE_INSN_DELETED 0)

(note 6 4 8 NOTE_INSN_DELETED 0)

(note 8 6 9 NOTE_INSN_DELETED 0)

(note 9 8 12 NOTE_INSN_FUNCTION_BEG 0)

(note 12 9 15 0x400f6340 NOTE_INSN_BLOCK_BEG 0)

(insn 15 12 331 (set (reg:DF 8 st(0))
        (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC34")) 0) 0 [0x0] 0 [0x0] 0 [0x0])) -1 (nil)
    (nil))

(insn 331 15 18 (set (mem:DF (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)
        (reg:DF 8 st(0))) 63 {*movdf_integer} (nil)
    (nil))

(insn 18 331 24 (set (reg/v:DF 10 st(2))
        (reg:DF 8 st(0))) 63 {*movdf_integer} (insn_list 15 (nil))
    (nil))

(insn 24 18 334 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -28 [0xffffffe4])) 0)
        (const_int 0 [0x0])) 33 {*movsi_1} (nil)
    (nil))

(insn 334 24 274 (set (reg:SI 0 eax)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 16 [0x10])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 274 334 275 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -28 [0xffffffe4])) 0)
            (reg:SI 0 eax))) 2 {*cmpsi_1_insn} (insn_list 8 (insn_list 24 (nil)))
    (nil))

(jump_insn 275 274 325 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 288 {*jcc_1} (insn_list 274 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 48
(note 325 275 324 [bb 1] NOTE_INSN_BASIC_BLOCK 0)

(insn 324 325 25 (set (reg/v:DF 12 st(4))
        (reg:DF 8 st(0))) 63 {*movdf_integer} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104

(note 25 324 31 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 48 104
(code_label 31 25 290 141 "" "" [1 uses])

(note 290 31 36 [bb 2] NOTE_INSN_BASIC_BLOCK 0)

(insn 36 290 279 (set (reg/v:SI 5 edi)
        (const_int 0 [0x0])) 33 {*movsi_1} (nil)
    (nil))

(insn 279 36 280 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 5 edi)
            (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 2 {*cmpsi_1_insn} (insn_list 36 (nil))
    (nil))

(jump_insn 280 279 326 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 288 {*jcc_1} (insn_list 279 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 104

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 48 51 104
(note 326 280 321 [bb 3] NOTE_INSN_BASIC_BLOCK 0)

(insn 321 326 37 (set (reg/v:DF 11 st(3))
        (reg/v:DF 12 st(4))) 63 {*movdf_integer} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

(note 37 321 43 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 48 51 103 104
(code_label 43 37 291 145 "" "" [1 uses])

(note 291 43 48 [bb 4] NOTE_INSN_BASIC_BLOCK 0)

(insn 48 291 50 (set (reg/v:SI 3 ebx)
        (const_int 0 [0x0])) 33 {*movsi_1} (nil)
    (nil))

(insn 50 48 284 (set (reg/v:DF 9 st(1))
        (reg/v:DF 11 st(3))) 63 {*movdf_integer} (nil)
    (nil))

(insn 284 50 285 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 ebx)
            (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 2 {*cmpsi_1_insn} (insn_list 48 (nil))
    (nil))

(jump_insn 285 284 327 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 288 {*jcc_1} (insn_list 284 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 103 104

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 50 51 103 104
(note 327 285 337 [bb 5] NOTE_INSN_BASIC_BLOCK 0)

(insn 337 327 311 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -28 [0xffffffe4])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 311 337 312 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(insn 312 311 313 (parallel[ 
            (set (reg:SI 0 eax)
                (mult:SI (reg:SI 0 eax)
                    (mem:SI (plus:SI (reg:SI 6 ebp)
                            (const_int -28 [0xffffffe4])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 311 (nil))
    (nil))

(note 313 312 340 NOTE_INSN_DELETED 0)

(insn 340 313 314 (set (reg:SI 1 edx)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(insn 314 340 315 (parallel[ 
            (set (reg:SI 1 edx)
                (lshiftrt:SI (reg:SI 1 edx)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 312 (nil))
    (nil))

(insn 315 314 316 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 314 (nil))
    (nil))

(insn 316 315 343 (parallel[ 
            (set (reg:SI 0 eax)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 315 (nil))
    (expr_list:REG_EQUAL (div:SI (reg:SI 0 eax)
            (const_int 2 [0x2]))
        (nil)))

(insn 343 316 317 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -32 [0xffffffe0])) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(insn 317 343 318 (set (reg:SI 0 eax)
        (plus:SI (reg/v:SI 5 edi)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(insn 318 317 346 (parallel[ 
            (set (reg:SI 0 eax)
                (mult:SI (reg:SI 0 eax)
                    (reg/v:SI 5 edi)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 317 (nil))
    (nil))

(insn 346 318 51 (set (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -36 [0xffffffdc])) 0)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104

(note 51 346 57 NOTE_INSN_LOOP_BEG 0)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 50 51 63 71 103 104
(code_label 57 51 292 149 "" "" [1 uses])

(note 292 57 62 [bb 6] NOTE_INSN_BASIC_BLOCK 0)

(insn 62 292 64 (set (reg/v:SI 2 ecx)
        (reg/v:SI 3 ebx)) 33 {*movsi_1} (nil)
    (nil))

(insn 64 62 65 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 ebx)
            (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -28 [0xffffffe4])) 0))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 65 64 293 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 288 {*jcc_1} (insn_list 64 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 63 71 103 104

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 49 50 51 63 71 103 104
(note 293 65 67 [bb 7] NOTE_INSN_BASIC_BLOCK 0)

(insn 67 293 68 (set (reg:SI 0 eax)
        (plus:SI (reg/v:SI 3 ebx)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(insn 68 67 70 (parallel[ 
            (set (reg:SI 0 eax)
                (mult:SI (reg:SI 0 eax)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 67 (nil))
    (nil))

(note 70 68 349 NOTE_INSN_DELETED 0)

(insn 349 70 72 (set (reg:SI 1 edx)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(insn 72 349 74 (parallel[ 
            (set (reg:SI 1 edx)
                (lshiftrt:SI (reg:SI 1 edx)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 68 (nil))
    (nil))

(insn 74 72 76 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 72 (nil))
    (nil))

(insn 76 74 78 (parallel[ 
            (set (reg:SI 0 eax)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 74 (nil))
    (expr_list:REG_EQUAL (div:SI (reg:SI 0 eax)
            (const_int 2 [0x2]))
        (nil)))

(insn 78 76 79 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (mem:SI (plus:SI (reg:SI 6 ebp)
                            (const_int -28 [0xffffffe4])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 76 (nil))
    (nil))

(note 79 78 352 NOTE_INSN_DELETED 0)

(insn 352 79 81 (set (reg:SI 1 edx)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 8 [0x8])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 81 352 82 (set (reg:SI 4 esi)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 1 edx))) 113 {*lea_0} (insn_list 78 (nil))
    (nil))

(jump_insn 82 81 83 (set (pc)
        (label_ref 101)) 296 {jump} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

(barrier 83 82 84)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 49 50 51 63 71 103 104
(code_label 84 83 294 150 "" "" [1 uses])

(note 294 84 355 [bb 8] NOTE_INSN_BASIC_BLOCK 0)

(insn 355 294 97 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -32 [0xffffffe0])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 97 355 98 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg/v:SI 3 ebx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 98 97 358 NOTE_INSN_DELETED 0)

(insn 358 98 100 (set (reg:SI 1 edx)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 8 [0x8])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 100 358 101 (set (reg:SI 4 esi)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 1 edx))) 113 {*lea_0} (insn_list 97 (nil))
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
(code_label 101 100 295 151 "" "" [1 uses])

(note 295 101 102 [bb 9] NOTE_INSN_BASIC_BLOCK 0)

(insn 102 295 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 5 edi)
            (reg/v:SI 2 ecx))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 103 102 296 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 288 {*jcc_1} (insn_list 102 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
(note 296 103 108 [bb 10] NOTE_INSN_BASIC_BLOCK 0)

(note 108 296 361 NOTE_INSN_DELETED 0)

(insn 361 108 110 (set (reg:SI 0 eax)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -36 [0xffffffdc])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 110 361 112 (parallel[ 
            (set (reg:SI 0 eax)
                (lshiftrt:SI (reg:SI 0 eax)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (nil)
    (nil))

(insn 112 110 114 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (mem:SI (plus:SI (reg:SI 6 ebp)
                            (const_int -36 [0xffffffdc])) 0)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 110 (nil))
    (nil))

(insn 114 112 116 (parallel[ 
            (set (reg:SI 0 eax)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 112 (nil))
    (expr_list:REG_EQUAL (div:SI (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -36 [0xffffffdc])) 0)
            (const_int 2 [0x2]))
        (nil)))

(insn 116 114 117 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg/v:SI 2 ecx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 114 (nil))
    (nil))

(note 117 116 364 NOTE_INSN_DELETED 0)

(insn 364 117 119 (set (reg:SI 1 edx)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 12 [0xc])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 119 364 120 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 1 edx))) 113 {*lea_0} (insn_list 116 (nil))
    (nil))

(jump_insn 120 119 121 (set (pc)
        (label_ref 139)) 296 {jump} (nil)
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104

(barrier 121 120 122)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 49 50 51 52 63 71 103 104
(code_label 122 121 297 152 "" "" [1 uses])

(note 297 122 124 [bb 11] NOTE_INSN_BASIC_BLOCK 0)

(insn 124 297 125 (set (reg:SI 0 eax)
        (plus:SI (reg/v:SI 2 ecx)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(insn 125 124 127 (parallel[ 
            (set (reg:SI 0 eax)
                (mult:SI (reg:SI 0 eax)
                    (reg/v:SI 2 ecx)))
            (clobber (reg:CC 17 flags))
        ] ) 147 {*mulsi3_1} (insn_list 124 (nil))
    (nil))

(note 127 125 367 NOTE_INSN_DELETED 0)

(insn 367 127 129 (set (reg:SI 1 edx)
        (reg:SI 0 eax)) 33 {*movsi_1} (nil)
    (nil))

(insn 129 367 131 (parallel[ 
            (set (reg:SI 1 edx)
                (lshiftrt:SI (reg:SI 1 edx)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ] ) 263 {*lshrsi3_1} (insn_list 125 (nil))
    (nil))

(insn 131 129 133 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg:SI 1 edx)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 129 (nil))
    (nil))

(insn 133 131 135 (parallel[ 
            (set (reg:SI 0 eax)
                (ashiftrt:SI (reg:SI 0 eax)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 249 {*ashrsi3_1} (insn_list 131 (nil))
    (expr_list:REG_EQUAL (div:SI (reg:SI 0 eax)
            (const_int 2 [0x2]))
        (nil)))

(insn 135 133 136 (parallel[ 
            (set (reg:SI 0 eax)
                (plus:SI (reg:SI 0 eax)
                    (reg/v:SI 5 edi)))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (insn_list 133 (nil))
    (nil))

(note 136 135 370 NOTE_INSN_DELETED 0)

(insn 370 136 138 (set (reg:SI 1 edx)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 12 [0xc])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 138 370 139 (set (reg:SI 0 eax)
        (plus:SI (mult:SI (reg:SI 0 eax)
                (const_int 8 [0x8]))
            (reg:SI 1 edx))) 113 {*lea_0} (insn_list 135 (nil))
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 50 51 52 63 69 71 103 104
(code_label 139 138 298 153 "" "" [1 uses])

(note 298 139 141 [bb 12] NOTE_INSN_BASIC_BLOCK 0)

(insn 141 298 142 (set (reg:DF 8 st(0))
        (mem:DF (reg:SI 4 esi) 0)) 63 {*movdf_integer} (nil)
    (nil))

(insn 142 141 143 (set (reg:DF 8 st(0))
        (mult:DF (reg:DF 8 st(0))
            (mem:DF (reg:SI 0 eax) 0))) 314 {*fop_df_comm} (insn_list 141 (nil))
    (nil))

(insn 143 142 146 (set (reg/v:DF 9 st(1))
        (plus:DF (reg/v:DF 9 st(1))
            (reg:DF 8 st(0)))) 314 {*fop_df_comm} (insn_list 142 (nil))
    (nil))

(note 146 143 149 NOTE_INSN_LOOP_CONT 0)

(insn 149 146 288 (parallel[ 
            (set (reg/v:SI 3 ebx)
                (plus:SI (reg/v:SI 3 ebx)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 288 149 53 NOTE_INSN_LOOP_VTOP 0)

(insn 53 288 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 3 ebx)
            (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 2 {*cmpsi_1_insn} (insn_list 149 (nil))
    (nil))

(jump_insn 54 53 155 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 288 {*jcc_1} (insn_list 53 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 50 51 63 71 103 104

(note 155 54 156 NOTE_INSN_LOOP_END 0)

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 51 103 104
(code_label 156 155 299 147 "" "" [1 uses])

(note 299 156 158 [bb 13] NOTE_INSN_BASIC_BLOCK 0)

(insn 158 299 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -28 [0xffffffe4])) 0)
            (reg/v:SI 5 edi))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 159 158 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 288 {*jcc_1} (insn_list 158 (nil))
    (expr_list:REG_BR_PROB (const_int 6001 [0x1771])
        (nil)))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

(note 160 159 300 0x400f4100 NOTE_INSN_BLOCK_BEG 0)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 51 103 104
(note 300 160 373 [bb 14] NOTE_INSN_BASIC_BLOCK 0)

(insn 373 300 162 (set (reg:DF 8 st(0))
        (reg/v:DF 9 st(1))) 63 {*movdf_integer} (nil)
    (nil))

(insn/i 162 373 168 (set (reg:DF 8 st(0))
        (abs:DF (reg:DF 8 st(0)))) -1 (nil)
    (nil))

(note 168 162 169 0x400f4100 NOTE_INSN_BLOCK_END 0)

(insn 169 168 170 (set (reg/v:DF 10 st(2))
        (plus:DF (reg/v:DF 10 st(2))
            (reg:DF 8 st(0)))) 314 {*fop_df_comm} (insn_list 162 (nil))
    (nil))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 51 103 104
(code_label 170 169 301 155 "" "" [1 uses])

(note 301 170 172 [bb 15] NOTE_INSN_BASIC_BLOCK 0)

(insn 172 301 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -28 [0xffffffe4])) 0)
            (reg/v:SI 5 edi))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 173 172 174 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 288 {*jcc_1} (insn_list 172 (nil))
    (expr_list:REG_BR_PROB (const_int 3999 [0xf9f])
        (nil)))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 47 48 51 103 104

(note 174 173 302 0x400f4380 NOTE_INSN_BLOCK_BEG 0)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 47 48 51 103 104
(note 302 174 376 [bb 16] NOTE_INSN_BASIC_BLOCK 0)

(insn 376 302 176 (set (reg:DF 8 st(0))
        (reg/v:DF 9 st(1))) 63 {*movdf_integer} (nil)
    (nil))

(insn/i 176 376 182 (set (reg:DF 8 st(0))
        (abs:DF (reg:DF 8 st(0)))) -1 (nil)
    (nil))

(note 182 176 183 0x400f4380 NOTE_INSN_BLOCK_END 0)

(insn 183 182 379 (set (reg:DF 8 st(0))
        (plus:DF (reg:DF 8 st(0))
            (mem:DF (plus:SI (reg:SI 6 ebp)
                    (const_int -24 [0xffffffe8])) 0))) 314 {*fop_df_comm} (insn_list 176 (nil))
    (nil))

(insn 379 183 187 (set (mem:DF (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)
        (reg:DF 8 st(0))) 63 {*movdf_integer} (nil)
    (nil))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

(note 187 379 188 NOTE_INSN_LOOP_CONT 0)

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 48 51 103 104
(code_label 188 187 303 144 "" "" [1 uses])

(note 303 188 190 [bb 17] NOTE_INSN_BASIC_BLOCK 0)

(insn 190 303 283 (parallel[ 
            (set (reg/v:SI 5 edi)
                (plus:SI (reg/v:SI 5 edi)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 283 190 39 NOTE_INSN_LOOP_VTOP 0)

(insn 39 283 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 5 edi)
            (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 2 {*cmpsi_1_insn} (insn_list 190 (nil))
    (nil))

(jump_insn 40 39 196 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 288 {*jcc_1} (insn_list 39 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 51 103 104

(note 196 40 200 NOTE_INSN_LOOP_END 0)

(note 200 196 201 NOTE_INSN_LOOP_CONT 0)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 42 43 44 45 46 48 104
(code_label 201 200 304 140 "" "" [1 uses])

(note 304 201 203 [bb 18] NOTE_INSN_BASIC_BLOCK 0)

(insn 203 304 380 (parallel[ 
            (set (mem:SI (plus:SI (reg:SI 6 ebp)
                        (const_int -28 [0xffffffe4])) 0)
                (plus:SI (mem:SI (plus:SI (reg:SI 6 ebp)
                            (const_int -28 [0xffffffe4])) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 380 203 278 NOTE_INSN_DELETED 0)

(note 278 380 383 NOTE_INSN_LOOP_VTOP 0)

(insn 383 278 27 (set (reg:SI 0 eax)
        (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 16 [0x10])) 0)) 33 {*movsi_1} (nil)
    (nil))

(insn 27 383 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (plus:SI (reg:SI 6 ebp)
                    (const_int -28 [0xffffffe4])) 0)
            (reg:SI 0 eax))) 2 {*cmpsi_1_insn} (insn_list 203 (nil))
    (nil))

(jump_insn 28 27 209 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 288 {*jcc_1} (insn_list 27 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 20 [frame] 42 43 44 45 46 48 104

(note 209 28 210 NOTE_INSN_LOOP_END 0)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 44 45 46
(code_label 210 209 305 139 "" "" [1 uses])

(note 305 210 212 [bb 19] NOTE_INSN_BASIC_BLOCK 0)

(insn 212 305 214 (set (reg:DF 9 st(1))
        (float:DF (mem/f:SI (plus:SI (reg:SI 6 ebp)
                    (const_int 16 [0x10])) 0))) 104 {floatsidf2} (nil)
    (nil))

(note 214 212 386 NOTE_INSN_DELETED 0)

(insn 386 214 215 (set (reg:DF 8 st(0))
        (reg:DF 9 st(1))) 63 {*movdf_integer} (nil)
    (nil))

(insn 215 386 408 (set (reg:DF 8 st(0))
        (mult:DF (reg:DF 8 st(0))
            (mem/u/f:DF (symbol_ref/u:SI ("*.LC35")) 0))) 314 {*fop_df_comm} (insn_list 212 (nil))
    (nil))

(insn 408 215 409 (set (reg:HI 0 ax)
        (unspec:HI[ 
                (compare:CCFPU (reg/v:DF 10 st(2))
                    (reg:DF 8 st(0)))
            ]  9)) -1 (nil)
    (nil))

(insn 409 408 410 (parallel[ 
            (set (zero_extract:SI (reg:HI 0 ax)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (and:SI (zero_extract:SI (reg:HI 0 ax)
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 69 [0x45])))
            (clobber (reg:CC 17 flags))
        ] ) -1 (nil)
    (nil))

(insn 410 409 411 (set (reg:CC 17 flags)
        (compare:CC (subreg:QI (zero_extract:SI (reg:HI 0 ax)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8])) 0)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 411 410 306 (set (pc)
        (if_then_else (eq (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 224)
            (pc))) -1 (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 20 [frame] 44 45 46 92

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 44 45 46 92
(note 306 411 219 [bb 20] NOTE_INSN_BASIC_BLOCK 0)

(note 219 306 389 NOTE_INSN_DELETED 0)

(insn 389 219 220 (set (reg:DF 8 st(0))
        (reg:DF 9 st(1))) 63 {*movdf_integer} (nil)
    (nil))

(insn 220 389 405 (set (reg:DF 8 st(0))
        (mult:DF (reg:DF 8 st(0))
            (mem/u/f:DF (symbol_ref/u:SI ("*.LC36")) 0))) 314 {*fop_df_comm} (nil)
    (nil))

(insn 405 220 406 (set (reg:HI 0 ax)
        (unspec:HI[ 
                (compare:CCFPU (reg/v:DF 10 st(2))
                    (reg:DF 8 st(0)))
            ]  9)) -1 (nil)
    (nil))

(insn 406 405 407 (set (reg:CCNO 17 flags)
        (compare:CCNO (and:SI (zero_extract:SI (reg:HI 0 ax)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (const_int 69 [0x45]))
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 407 406 224 (set (pc)
        (if_then_else (eq (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 241))) -1 (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 20 [frame] 44 45 46

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 44 45 46
(code_label 224 407 307 162 "" "" [1 uses])

(note 307 224 226 [bb 21] NOTE_INSN_BASIC_BLOCK 0)

(note 226 307 229 0x400f4ce0 NOTE_INSN_BLOCK_BEG 0)

(insn 229 226 230 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(note 230 229 390 NOTE_INSN_DELETED 0)

(insn 390 230 393 (use (mem/f:SI (plus:SI (reg:SI 6 ebp)
                (const_int 16 [0x10])) 0)) -1 (nil)
    (nil))

(insn 393 390 231 (set (reg:DF 8 st(0))
        (reg/v:DF 10 st(2))) 63 {*movdf_integer} (nil)
    (nil))

(insn 231 393 403 (set (reg:DF 8 st(0))
        (div:DF (reg:DF 8 st(0))
            (float:DF (mem/f:SI (plus:SI (reg:SI 6 ebp)
                        (const_int 16 [0x10])) 0)))) 321 {*fop_df_3} (nil)
    (nil))

(insn 403 231 404 (set (reg:SI 7 esp)
        (plus:SI (reg:SI 7 esp)
            (const_int -8 [0xfffffff8]))) -1 (nil)
    (nil))

(insn 404 403 235 (set (mem:DF (reg:SI 7 esp) 0)
        (reg:DF 8 st(0))) -1 (nil)
    (nil))

(insn 235 404 236 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC37"))) 27 {pushsi2} (nil)
    (nil))

(call_insn 236 235 238 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("printf")) 0)
            (const_int 16 [0x10]))) 369 {*call_value_0} (nil)
    (nil)
    (nil))

(note 238 236 240 0x400f4ce0 NOTE_INSN_BLOCK_END 0)

(insn 240 238 241 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 20 [frame] 46

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 46
(code_label 241 240 308 161 "" "" [1 uses])

(note 308 241 243 [bb 22] NOTE_INSN_BASIC_BLOCK 0)

(note 243 308 396 0x400f4e40 NOTE_INSN_BLOCK_BEG 0)

(insn 396 243 245 (set (reg:DF 9 st(1))
        (mem:DF (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)) 63 {*movdf_integer} (nil)
    (nil))

(insn/i 245 396 251 (set (reg:DF 9 st(1))
        (abs:DF (reg:DF 9 st(1)))) -1 (nil)
    (nil))

(note 251 245 253 0x400f4e40 NOTE_INSN_BLOCK_END 0)

(insn 253 251 400 (set (reg:DF 8 st(0))
        (mem/u/f:DF (symbol_ref/u:SI ("*.LC38")) 0)) 63 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF (mem/u/f:DF (symbol_ref/u:SI ("*.LC38")) 0) 1744830464 [0x68000000] 391701017 [0x1758e219] 1072812471 [0x3ff1d1b7])
        (nil)))

(insn 400 253 401 (set (reg:HI 0 ax)
        (unspec:HI[ 
                (compare:CCFPU (reg:DF 9 st(1))
                    (reg:DF 8 st(0)))
            ]  9)) -1 (nil)
    (nil))

(insn 401 400 402 (set (reg:CCNO 17 flags)
        (compare:CCNO (and:SI (zero_extract:SI (reg:HI 0 ax)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (const_int 69 [0x45]))
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 402 401 309 (set (pc)
        (if_then_else (eq (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (pc)
            (label_ref 268))) -1 (nil)
    (nil))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 20 [frame] 46

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 46
(note 309 402 260 [bb 23] NOTE_INSN_BASIC_BLOCK 0)

(insn 260 309 397 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int -4 [0xfffffffc])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))

(insn 397 260 398 (set (mem:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -20 [0xffffffec])) 0)) -1 (nil)
    (nil))

(insn 398 397 264 (set (mem:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (mem:SI (plus:SI (reg:SI 6 ebp)
                (const_int -24 [0xffffffe8])) 0)) -1 (nil)
    (nil))

(insn 264 398 265 (set (mem/f:SI (pre_dec:SI (reg:SI 7 esp)) 0)
        (symbol_ref:SI ("*.LC39"))) 27 {pushsi2} (nil)
    (nil))

(call_insn 265 264 267 (set (reg:SI 0 eax)
        (call (mem:QI (symbol_ref:SI ("printf")) 0)
            (const_int 16 [0x10]))) 369 {*call_value_0} (nil)
    (nil)
    (nil))

(insn 267 265 268 (parallel[ 
            (set (reg:SI 7 esp)
                (plus:SI (reg:SI 7 esp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ] ) 117 {*addsi_1} (nil)
    (nil))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 20 [frame]

;; Start of basic block 24, registers live: 6 [bp] 7 [sp]
(code_label 268 267 310 163 "" "" [1 uses])

(note 310 268 270 [bb 24] NOTE_INSN_BASIC_BLOCK 0)
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 20 [frame]

(note 270 310 328 0x400f6340 NOTE_INSN_BLOCK_END 0)

(note 328 270 0 NOTE_INSN_DELETED 0)

