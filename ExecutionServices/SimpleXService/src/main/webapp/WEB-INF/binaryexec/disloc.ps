%!PS-Adobe-3.0%%Title: (disloc document)%%Creator: (WriteNow 3.0: LaserWriter 8 8.5.1)%%CreationDate: (2:45 PM Thursday, February 12, 1998)%%For: (Greg Lyzenga)%%Routing: (mailto:\000lyzenga@hmc.edu)%%Pages: 2%%DocumentFonts: Helvetica Times-Roman Symbol Times-Italic Courier%%DocumentNeededFonts: Helvetica Times-Roman Symbol Times-Italic Courier%%DocumentSuppliedFonts:%%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%%DocumentMedia: Default 612 792 0 () ()%ADO_ImageableArea: 12 12 600 780%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaultsuserdict/dscInfo 5 dict dup begin/Title(disloc document)def/Creator(WriteNow 3.0: LaserWriter 8 8.5.1)def/CreationDate(2:45 PM Thursday, February 12, 1998)def/For(Greg Lyzenga)def/Pages 2 defend put%%BeginFeature: *JobPatchFile 2/filterLineCapBugCTM where {pop false}{true}ifelsestatusdict begin version cvi 2014 eq revision 1.1 lt end and and{userdict begin/sysdictSc /scale load def/sysdictSa /setstrokeadjust load def/sysdictLc /setlinecap load def/sysdictIm /initmatrix load def/sysdictCc /concat load def/sysdictSm /setmatrix load def/filterLineCapBugCTM matrix def/filterLCBCTM {	currentstrokeadjust currentlinecap 2 eq and	{filterLineCapBugCTM currentmatrix	dup dup 0 get abs exch 3 get abs ne	exch dup 1 get abs exch 2 get abs ne or	{1 sysdictLc}if	}if}bind def/scale {sysdictSc filterLCBCTM}bind def/setlinecap {sysdictLc filterLCBCTM}bind def/setstrokeadjust {sysdictSa filterLCBCTM}bind def/initmatrix {sysdictIm filterLCBCTM}bind def/concat {sysdictCc filterLCBCTM}bind def/setmatrix {sysdictSm filterLCBCTM}bind defend /sysdictSc /sysdictSa /sysdictLc/sysdictIm /sysdictCc /sysdictSm6 {userdict exch undef}repeat}if%%EndFeature/md 251 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: lw8_basic-2.3%%Copyright: Copyright 1990-1997 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved./bd{bind def}bind def/xdf{exch def}bd/xs{exch store}bd/ld{load def}bd/Z{0 def}bd/T/true/F/false/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath14{ld}repeat/framewidth -1 def/QDframwid -1 def/numframes Z/mTS matrix def/$m matrix def/av 85 def/por T def/normland F def/psb-nosave{}def/pse-nosave{}def/us Z/psb{/us save store}bd/pse{us restore}bd/level2/languagelevel where{pop languagelevel 2 ge}{F}ifelsedef/level3/languagelevel where{pop languagelevel 3 ge}{F}ifelsedef/odictstk Z/oopstk Z/fcl{count oopstk sub dup 0 gt{{pop}repeat}{pop}ifelsecountdictstack odictstk sub dup 0 gt{{end}repeat}{pop}ifelse}bd/sfcl2{/odictstk countdictstack storecount/oopstk xs}bd/efcl2{stopped{$error/newerror F put}iffcl}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bdlevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/setcopies{userdict/#copies 3 -1 roll put}bd/devg/DeviceGray def/devr/DeviceRGB def/devc/DeviceCMYK def/ststpgdev{}def/dopgdev{}def/stpgdev{}def/buf Z/didstop T def/sfcl{/didstop T store/odictstk countdictstack storecount/oopstk xscurrentfile cvx stopped{$error/newerror F putdidstop{save/didstop xs/buf vmstatus exch sub exch pop dup 0 lt{pop 0}ifdup 64000 gt{pop 64000}if string store{currentfile buf readline{(}efcl)eq{exit}if}{/UnexpectedEOF errordict/rangecheck get exec}ifelse}loopdidstop restore}if}iffcl}bd/efcl{/didstop F storeexecstop}bdlevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/setcopies{1 dict begin/NumCopies xdf currentdict end setpagedevice}bd/devg[/DeviceGray]def/devr[/DeviceRGB]def/devc[/DeviceCMYK]def/setpagedevice where{pop/realstpgdev/setpagedevice ld}if/SC_topddict Z/SC_spdict Z/dopgdev{md/setpagedevice undefSC_topddict realstpgdev}bd/stpgdev{SC_topddict dup 3 -1 roll{SC_spdict 2 index known{SC_spdict 2 index getdup 3 -1 roll{put dup}forallpop put dup}{put dup}ifelse}forallpop pop}bd/ststpgdev{md/setpagedevice/stpgdev load put/SC_topddict 0 dict store/SC_spdict 3 dict begin/InputAttributes 0 dict def/Policies 0 dict def/OutputAttributes 0 dict defcurrentdictendstore}def/sfcl/sfcl2 ld/efcl/efcl2 ldlevel2 not endnoload/pm Z/mT Z/sD Z/realshowpage Z/initializepage{mT $m currentmatrix mTS concatmatrix pop/pm save store mT concat}bd/endp{pm restore}bd/adjRect{dup 2 mul 6 2 roll4 index sub exch 5 -1 roll sub exch4 2 roll4 index add exch 5 -1 roll add exch4 2 roll}bd/frame1up{gSmTS setmatrixQDframwid lw/setstrokeadjust where{pop T setstrokeadjust}ifclippath pathbbox2 index sub exch3 index sub exchcurrentlinewidth framewidth muladjRectnumframes dup 0 lt{pop 0}if{4 copyrScurrentlinewidth framewidthmul 4 muladjRect}repeatpop pop pop popgR}bd/$c devr def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFilelevel3 startnoload%%BeginFile: lw8_safeclipL12-1.0					/rectclip where{pop/rCa/rectclip ld}{/rCa{np 01 index length 4 idiv{2 copy4 getintervalaload pop4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:K4 add}repeatclip nppop pop}bd}ifelse/savedstack Z/subsavedstack Z/execstring Z/saferCa{/execstring xs/odictstk countdictstack store/oopstk 0 storecount 0 ne{savedstack 0 eq{count 100 gt{count}{100}ifelsearray/savedstack xs}{count savedstack length gt{count array/savedstack xs}if}ifelsecount savedstack 0 3 -1 rollgetintervalastore/subsavedstack xs}{/subsavedstack 0 store}ifelseexecstring cvx stopped{$error/newerror F putnewpath}iffclsubsavedstack 0 ne{subsavedstack aload pop}if}bd%%EndFilelevel3 endnoload level3 not startnoload%%BeginFile: lw8_safeclipL3-1.0	/saferCa/pop ld%%EndFilelevel3 not endnoload%%BeginFile: lw8_level1_colorspace-2.0/G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/$cs Z/:rg{devr :ss}bd/:sc{$cs :ss}bd/:dc{dup type/arraytype eq{0 get}ifdup/DeviceCMYK eq{pop devc}{/DeviceGray eq{devg}{devr}ifelse}ifelse/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd%%EndFile%%BeginFile: lw8_uniform_graphics-2.0/@a{np :M 0 rl :L 0 exch rl 0 rl :L fill}bd/@b{np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill}bd/@c{moveto 0 rlineto stroke}bd/@w{moveto 0 exch rlineto stroke}bd/arct where{pop}{/arct{arcto pop pop pop pop}bd}ifelse/x1 Z/x2 Z/y1 Z/y2 Z/rad Z/@q{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arctfill}bd/@s{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arct:Kstroke}bd/@i{np 0 360 arc fill}bd/@j{gSnp:Tscale0 0 .5 0 360 arcfillgR}bd/@e{np0 360 arc:Kstroke}bd/@f{np$m currentmatrixpop:Tscale0 0 .5 0 360 arc:K$m setmatrixstroke}bd/@k{gSnp:T0 0 :M0 0 5 2 rollarc fillgR}bd/@l{gSnp:T0 0 :Mscale0 0 .5 5 -2 roll arcfillgR}bd/@m{nparcstroke}bd/@n{np$m currentmatrixpop:Tscale0 0 .5 5 -2 roll arc$m setmatrixstroke}bd%%EndFile%%BeginFile: lw8_basic_text-2.0/S/show ld/A{0.0 exch ashow}bd/R{0.0 exch 32 exch widthshow}bd/W{0.0 3 1 roll widthshow}bd/J{0.0 32 4 2 roll 0.0 exch awidthshow}bd/V{0.0 4 1 roll 0.0 exch awidthshow}bd/fcflg T def/fc{fcflg{vmstatus exch sub 50000 lt{(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store}if pop}if}bd/$f[1 0 0 -1 0 0]def/:ff{$f :mf}bd/MacEncoding StandardEncoding 256 array copy defMacEncoding dup 9/space put dup 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacEncoding 128 128 getinterval astore poplevel2 startnoload/copyfontdict{findfont dup length dictbegin{1 index/FID ne{def}{pop pop}ifelse}forall}bd/$ckeyd md def/:skey{1 index maxlength 2 indexlength subge{begin/$mkeys 20 dict def/$mkeys loadenddup/$ckeyd xs}if3 1 roll put}bd/fD1pass{40$ckeyd//mdne{pop 1}if$ckeyd exch:skey}bd/:searchdict Z/:searchdict{exch 2 copyknown{get}{exch/$mkeysget:searchdict}ifelse}bd/lU{//md exch 2 copyknown{get}{exch/$mkeys get:searchdict}ifelse}bdlevel2 endnoload level2 not startnoload/copyfontdict{findfont dup length dictcopybegin}bd/fD1pass/def ld/lU/load ldlevel2 not endnoload/fD Z/sf Z/scf Z/sf1pass{lU setfont}bd/scf1pass{exch lU exch scalefont fD}bd/scf2pass{scalefont fD}bdmd/fontname known not{/fontname/customfont def}if/Encoding Z/:mre{copyfontdict/Encoding MacEncoding deffontname currentdictenddefinefont :ff fD}bd/:bsr{copyfontdict/Encoding Encoding 256 array copy defEncoding dup}bd/pd{put dup}bd/:esr{pop popfontname currentdictenddefinefont :ff fD}bd/ps Z/fz{/ps xs}bd/cF/currentfont ld/mbf{/makeblendedfont where{popmakeblendedfont/ABlend exch definefont}{pop}ifelsefD}def%%EndFile%%BeginFile: lw8_derived_styles-2.0/wiversion(23.0)eq{{gS 0 0 0 0 rC stringwidth gR}bind}{/stringwidth load}ifelsedef/$o 1. def/gl{$o G}bd/ms{:M S}bd/condensedmtx[.82 0 0 1 0 0]def/:mc{condensedmtx :mf fD}bd/extendedmtx[1.18 0 0 1 0 0]def/:me{extendedmtx :mf fD}bd/basefont Z/basefonto Z/dxa Z/dxb Z/dxc Z/dxd Z/dsdx2 Z/bfproc Z/:fbase{dup/FontType get 0 eq{dup length dict begindup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/FDepVector exch/FDepVector get[exch/:fbase load forall]def}/bfproc load ifelse/customfont currentdict end definefont}bd/:mo{/bfproc{dup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .012 0 FontMatrix idtransform pop def/customfont currentdictenddefinefont8 dict begin/basefonto xdf/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginbasefont setfont( )dup 0 4 -1 roll putdup wisetcharwidth0 0 :MgSgldup showgRbasefonto setfontshowend}def}store :fbase}bd/:mso{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxa 1 ps div defbasefont setfont( )dup 0 4 -1 roll putdup wi1 index 0 ne{exch dxa add exch}ifsetcharwidthdup 0 0 msdup dxa 0 msdup dxa dxa msdup 0 dxa msgldxa 2. div dup msendend}def}store :fbase}bd/:ms{/bfproc{dup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .012 0 FontMatrix idtransform pop def/customfont currentdictenddefinefont8 dict begin/basefonto xdf/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxb .05 defbasefont setfont( )dup 0 4 -1 roll putdup wiexch dup 0 ne{dxb add}ifexch setcharwidthdup dxb .01 add 0 ms0 dxb :TgSgldup 0 0 msgRbasefonto setfont0 0 msendend}def}store :fbase}bd/:mss{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxc 1 ps div def/dsdx2 .05 dxc 2 div add defbasefont setfont( )dup 0 4 -1 roll putdup wiexch dup 0 ne{dsdx2 add}ifexch setcharwidthdup dsdx2 .01 add 0 ms0 .05 dxc 2 div sub :Tdup 0 0 msdup dxc 0 msdup dxc dxc msdup 0 dxc msgldxc 2 div dup msendend}def}store :fbase}bd/:msb{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxd .03 defbasefont setfont( )dup 0 4 -1 roll putdup wi1 index 0 ne{exch dxd add exch}ifsetcharwidthdup 0 0 msdup dxd 0 msdup dxd dxd ms0 dxd msendend}def}store :fbase}bd/italicmtx[1 0 -.212557 1 0 0]def/:mi{italicmtx :mf fD}bd/:v{[exch dup/FontMatrix get exchdup/FontInfo known{/FontInfo getdup/UnderlinePosition known{dup/UnderlinePosition get2 index 03 1 rolltransformexch pop}{.1}ifelse3 1 rolldup/UnderlineThickness known{/UnderlineThickness getexch 0 3 1 rolltransformexch popabs}{pop pop .067}ifelse}{pop pop .1 .067}ifelse]}bd/$t Z/$p Z/$s Z/:p{aload pop2 index mul/$t xs1 index mul/$p xs.012 mul/$s xs}bd/:m{gS0 $p rm$t lw0 rl strokegR}bd/:n{gS0 $p rm$t lw0 rlgSglstrokegRstrokepath$s lw/setstrokeadjust where{popcurrentstrokeadjust T setstrokeadjust stroke setstrokeadjust}{stroke}ifelsegR}bd/:o{gS0 $p rm$t 2 div dup rm$t lwdup 0 rlstrokegR:n}bd%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begin/fD/def ld/sf/setfont ld /scf/scf2pass ldsfcl{%%BeginFeature: *Smoothing False	2 dict dup /PostRenderingEnhance false put setpagedevice%%EndFeature}efclsfcl{%%BeginFeature: *BitsPerPixel None	2 dict dup /PreRenderingEnhance false put setpagedevice%%EndFeature}efclsfcl{%%BeginFeature: *ManualFeed False1 dict dup /ManualFeed false put setpagedevice%%EndFeature}efclsfcl{%%BeginFeature: *PageSize LetterSmall	2 dict dup /PageSize [612 792] put dup /ImagingBBox [25 25 587 767] put setpagedevice%%EndFeature}efcl(Greg Lyzenga)setjob/mT[1 0 0 -1 12 780]def/sD 16 dict def 600 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse%%IncludeFont: Helvetica/f44/Helvetica:mre/f60 f44 18 scf%%IncludeFont: Times-Roman/f83/Times-Roman:mre/f100 f83 18 scf/f115 f83 12 scf%%IncludeFont: Symbol/f139/Symbol:bsr240/apple pd:esr/f153 f139 14 scf/f168 f83 14 scf/f183 f139 18 scf%%IncludeFont: Times-Italic/f198/Times-Italic:mre/f215 f198 12 scf/f230 f83 9 scf%%IncludeFont: Courier/f254/Courier:mre/f269 f254 12 scf/f284 f83 12 scf/u284 f83 :v fD/f299 f139 12 scf/Courier findfont[10 0 0 -10 0 0]:mf setfont%%EndSetup%%Page: 1 1%%BeginPageSetupinitializepage(Greg Lyzenga; page: 1 of 2)setjob%%EndPageSetupgS 0 0 588 768 rC0 68 588 525 rC151 82 :Mf60 sf-.086(Elastic Dislocation Fault Parameters)A.938 G19 86 548 362 rCnp 471 356 :M485 393 :L365 438 :L351 401 :L471 356 :Leofill0 G471 357 -1 1 486 393 1 471 356 @a-1 -1 366 439 1 1 485 393 @b351 402 -1 1 366 438 1 351 401 @a-1 -1 352 402 1 1 471 356 @b.938 Gnp 93 210 :M268 253 :L250 324 :L76 281 :L93 210 :Leofill0 G93 211 -1 1 269 253 1 93 210 @a-1 -1 251 325 1 1 268 253 @b76 282 -1 1 251 324 1 76 281 @a-1 -1 77 282 1 1 93 210 @bgRgS 0 0 588 768 rCnp 135 269 :M157 290 :L156 290 :L133 277 :L135 269 :Leofill.5 G135 269 :M149.664 282.996 157 290 157 290 :C157 290 156.831 290 156.5 290 :C156.164 290 156 290 156 290 :C156 290 152.165 287.829 144.5 283.5 :C136.831 279.162 133 277 133 277 :C133 277 133.331 275.663 134 273 :C134.665 270.329 135 269 135 269 :Ceofill0 G19 86 548 362 rCgRgS 0 0 588 768 rCnp 136 268 :M157 287 :L157 290 :L135 277 :L136 268 :Leofill136 268 :M149.998 280.662 157 287 157 287 :C157 287 157 287.496 157 288.5 :C157 289.496 157 290 157 290 :C157 290 153.331 287.829 146 283.5 :C138.664 279.162 135 277 135 277 :C135 277 135.165 275.496 135.5 272.5 :C135.831 269.496 136 268 136 268 :Ceofill19 86 548 362 rCgRgS 0 0 588 768 rCnp 138 263 :M135 264 :L128 269 :L137 287 :L140 287 :L139 264 :Leofill.5 G138 263 :M135.998 263.663 135 264 135 264 :C135 264 133.831 264.829 131.5 266.5 :C129.165 268.163 128 269 128 269 :C128 269 129.498 271.996 132.5 278 :C135.498 283.996 137 287 137 287 :C137 287 137.498 287 138.5 287 :C139.498 287 140 287 140 287 :C140 287 139.831 283.163 139.5 275.5 :C139.165 267.829 139 264 139 264 :Ceofill0 G19 86 548 362 rCgRgS 0 0 588 768 rCnp 139 264 :M140 286 :L131 268 :L139 264 :Leofill139 264 :M139.665 278.662 140 286 140 286 :C140 286 138.498 282.996 135.5 277 :C132.498 270.996 131 268 131 268 :C131 268 132.331 267.329 135 266 :C137.665 264.663 139 264 139 264 :Ceofill19 86 548 362 rCgRgS 0 0 588 768 rCnp 160 289 :M169 253 :L166 253 :L176 239 :L178 255 :L175 255 :L166 290 :L160 289 :Leofill.5 G164.5 271 :M167.498 258.996 169 253 169 253 :C169 253 168.497 253 167.5 253 :C166.497 253 166 253 166 253 :C166 253 167.664 250.663 171 246 :C174.331 241.33 176 239 176 239 :C176 239 176.331 241.663 177 247 :C177.664 252.33 178 255 178 255 :C178 255 177.497 255 176.5 255 :C175.497 255 175 255 175 255 :C175 255 173.497 260.829 170.5 272.5 :C167.497 284.163 166 290 166 290 :C166 290 164.998 289.829 163 289.5 :C160.997 289.162 160 289 160 289 :C160 289 161.497 282.996 164.5 271 :C:Keofill19 86 548 362 rCgR.5 GgS 0 0 588 768 rCnp 158 286 :M167 251 :L164 250 :L174 236 :L175 253 :L173 252 :L164 288 :L158 286 :Leofill0 G162.5 268.5 :M165.498 256.829 167 251 167 251 :C167 251 166.497 250.83 165.5 250.5 :C164.497 250.163 164 250 164 250 :C164 250 165.664 247.663 169 243 :C172.331 238.33 174 236 174 236 :C174 236 174.164 238.83 174.5 244.5 :C174.831 250.163 175 253 175 253 :C175 253 174.664 252.829 174 252.5 :C173.331 252.163 173 252 173 252 :C173 252 171.497 257.996 168.5 270 :C165.497 281.996 164 288 164 288 :C164 288 162.998 287.662 161 287 :C158.998 286.329 158 286 158 286 :C158 286 159.497 280.163 162.5 268.5 :C:KgSeofillgRstroke19 86 548 362 rCgR0 GgS 0 0 588 768 rCnp 163 297 :M198 306 :L198 308 :L215 307 :L200 297 :L200 300 :L164 291 :L163 297 :Leofill.5 G180.5 301.5 :M192.164 304.495 198 306 198 306 :C198 306 198 306.329 198 307 :C198 307.662 198 308 198 308 :C198 308 200.83 307.829 206.5 307.5 :C212.164 307.162 215 307 215 307 :C215 307 212.497 305.329 207.5 302 :C202.497 298.662 200 297 200 297 :C200 297 200 297.495 200 298.5 :C200 299.495 200 300 200 300 :C200 300 193.997 298.496 182 295.5 :C169.997 292.495 164 291 164 291 :C164 291 163.831 291.995 163.5 294 :C163.164 295.996 163 297 163 297 :C163 297 168.83 298.495 180.5 301.5 :C:Keofill19 86 548 362 rCgR.5 GgS 0 0 588 768 rCnp 162 294 :M197 303 :L196 306 :L213 304 :L199 295 :L199 297 :L163 288 :L162 294 :Leofill0 G179.5 298.5 :M191.164 301.495 197 303 197 303 :C197 303 196.83 303.495 196.5 304.5 :C196.164 305.495 196 306 196 306 :C196 306 198.83 305.662 204.5 305 :C210.164 304.329 213 304 213 304 :C213 304 210.664 302.495 206 299.5 :C201.33 296.495 199 295 199 295 :C199 295 199 295.329 199 296 :C199 296.662 199 297 199 297 :C199 297 192.997 295.496 181 292.5 :C168.997 289.496 163 288 163 288 :C163 288 162.831 288.996 162.5 291 :C162.164 292.996 162 294 162 294 :C162 294 167.831 295.495 179.5 298.5 :C:KgSeofillgRstroke19 86 548 362 rC42 268.5 254 @w-1 -1 252 325 1 1 268 295 @b220 289 14 19 rC221 303 :Mf100 sf(U)SgRgS 232 298 7 12 rC233 307 :M0 Gf115 sf(1)SgRgS 181 239 14 19 rC182 253 :M0 Gf100 sf(U)SgRgS 194 248 7 12 rC195 257 :M0 Gf115 sf(2)SgRgS 107 254 14 19 rC108 268 :M0 Gf100 sf(U)SgRgS 120 263 7 12 rC121 272 :M0 Gf115 sf(3)SgR0 GgS 19 86 548 362 rCgRgS 0 0 588 768 rC261 288 :M262.996 288.662 264.329 289.829 265 291.5 :C265.663 293.162 266 294.329 266 295 :Cstroke283 263 8 15 rC284 275 :Mf153 sf(d)SgRgS 19 86 548 362 rC-.25 -.25 265.25 287.25 .25 .25 281 274 @b293 266 64 12 rC294 275 :Mf115 sf(\(dip angle\))SgRgS 19 86 548 362 rCnp 75 108 :M79 122 :L75 122 :L71 122 :L75 108 :Leofill254 75.5 122 @w10 71 280.5 @cnp 340 232 :M325 232 :L326 229 :L327 225 :L340 232 :Leofill75 168 -1 1 327 229 1 75 167 @anp 162 131 :M150 140 :L149 136 :L148 133 :L162 131 :Leofill-1 -1 76 168 1 1 149 136 @b20 214 8 15 rC21 226 :Mf168 sf(d)SgRgS 30 217 36 12 rC31 226 :Mf115 sf(\(depth\))SgRgS 70 87 10 18 rC71 101 :Mf60 sf(z)SgRgS 166 119 10 18 rC167 133 :Mf60 sf(y)SgRgS 344 225 10 18 rC345 239 :Mf60 sf(x)SgRgS 19 86 548 362 rC.25 lw111.25 68.125 168 @wgRgS 0 0 588 768 rC.25 lw65 171 :M66.999 168.997 68 168 68 168 :C68 168 68.499 168.497 69.5 169.5 :C70.499 170.497 71 171 71 171 :Cstroke19 86 548 362 rCgRgS 0 0 588 768 rC.25 lw65 277 :M66.999 278.329 68 279 68 279 :C68 279 68.499 278.662 69.5 278 :C70.499 277.329 71 277 71 277 :Cstroke19 86 548 362 rCnp 366 311 :M370 325 :L366 325 :L362 325 :L366 311 :Leofill1 lw114 366.5 325 @wnp 552 438 :M538 442 :L538 438 :L538 434 :L552 438 :Leofill173 366 438.5 @c556 429 10 18 rC557 443 :Mf60 sf(x)SgRgS 361 289 73 18 rC362 303 :Mf60 sf(y  \(north\))SgR.25 lwgS 19 86 548 362 rC366.5 438.5 37 -88 -23 @mgRgS 0 0 588 768 rC369 402 :M367.661 401.327 367 401 367 401 :C367 401 367.328 400.661 368 400 :C368.661 399.327 369 399 369 399 :Cstroke19 86 548 362 rCgRgS 0 0 588 768 rC398 422 :M399.327 422.66 400 423 400 423 :C400 423 400.161 422.494 400.5 421.5 :C400.827 420.494 401 420 401 420 :Cstroke19 86 548 362 rC390 388 11 24 rC391 406 :Mf183 sf(f)SgRgS 447 334 56 12 rC448 343 :Mf115 sf(\(map view\))SgR1 GgS 19 86 548 362 rC402 395 65 12 rF402 395 65 12 rC403 404 :M0 Gf115 sf(\(strike angle\))SgR0 GgS 19 86 548 362 rC71 296.25 -.25 .25 242.25 338 .25 71 296 @agRgS 0 0 588 768 rC240 333 :M241.33 336.328 242 338 242 338 :C242 338 241.33 338.495 240 339.5 :C238.663 340.495 238 341 238 341 :Cstroke19 86 548 362 rCgRgS 0 0 588 768 rC76 293 :M72.666 294.995 71 296 71 296 :C71 296 71.332 296.829 72 298.5 :C72.666 300.162 73 301 73 301 :Cstroke19 86 548 362 rC1 G127 308 14 15 rF127 308 14 15 rC128 320 :M0 Gf168 sf(L)SgR1 GgS 19 86 548 362 rC139 311 39 12 rF139 311 39 12 rC140 320 :M0 Gf115 sf(\(length\))SgR0 GgS 19 86 548 362 rC-.25 -.25 71.25 277.25 .25 .25 88 211 @bgRgS 0 0 588 768 rC86 212 :M87.332 211.33 88 211 88 211 :C88 211 88.332 211.33 89 212 :C89.665 212.663 90 213 90 213 :Cstroke19 86 548 362 rCgRgS 0 0 588 768 rC70 275 :M70.666 276.329 71 277 71 277 :C71 277 71.332 276.829 72 276.5 :C72.666 276.162 73 276 73 276 :Cstroke19 86 548 362 rCgRgS 0 0 588 768 rC87 226 :M88.999 228.663 91.165 229.83 93.5 229.5 :C95.832 229.163 98.165 228.163 100.5 226.5 :C102.832 224.83 104.998 222.663 107 220 :C108.998 217.33 110.998 214.497 113 211.5 :C114.998 208.497 117.165 206.664 119.5 206 :C121.832 205.33 123.331 205 124 205 :Cstroke19 86 548 362 rC127 197 15 15 rC128 209 :Mf168 sf(W)SgRgS 140 200 37 12 rC141 209 :Mf115 sf(\(width\))SgRgS 0 68 588 525 rC60 475 :Mf115 sf-.146(When running )Af215 sf-.126(disloc)Af115 sf-.124(, several parameters are needed to characterize each fault.  The )Af215 sf-.13(location)Af115 sf-.172( of)A60 491 :M-.104(the fault is defined as the surface projection of the lower-left corner of the fault plane \(shown as the)A60 507 :M-.09(origin here\).  The )Af215 sf-.104(depth)Af115 sf-.09( is the z-coordinate of the fault\325s bottom edge.  The )Af215 sf-.1(dip)Af115 sf-.102( angle is measured)A60 523 :M-.082(from horizontal \(as shown\).  The )Af215 sf-.075(strike)Af115 sf-.083( angle is the orientation \(measured clockwise from north\))A60 539 :M-.087(of the surface projection of the fault\325s horizontal edges.  The )Af215 sf-.094(length)Af115 sf-.088( and )Af215 sf-.101(width)Af115 sf-.098( are the dimensions)A60 555 :M-.079(of the rectangular fault.  U)Af230 sf0 3 rm-.079(1)A0 -3 rmf115 sf-.077( is the strike slip component of fault slip \(positive for left-lateral\).  U)Af230 sf0 3 rm(2)S0 -3 rm60 571 :Mf115 sf-.076(is the dip slip component of fault slip \(positive for thrust\).  U)Af230 sf0 3 rm-.076(3)A0 -3 rmf115 sf-.079( is the tensile component of fault slip)A60 587 :M-.029(\(positive for opening\).)Aendpshowpage%%Page: 2 2%%BeginPageSetupinitializepage(Greg Lyzenga; page: 2 of 2)setjob%%EndPageSetupgS 0 0 588 768 rC0 68 588 624 rC60 78 :Mf115 sf-.11(The executable program )Af215 sf-.101(disloc)Af115 sf-.101( takes input from and writes output to ASCII text files.  The)A60 94 :M-.087(program and source code can be found on photon in the directory \324)Af269 sf-.127(~seismo/disloc)Af115 sf-.093(\325.  The)A60 109 :M-.134(form of the command line is:)A60 125 :M-.045(                                            )Af269 sf-.113( disloc infile outfile)A60 155 :Mf115 sf-.056(\(If you type \324disloc\325 without arguments, you get help information, which is basically a synopsis of)A60 170 :M-.109(the information in this document.\)  You can either generate the input file manually yourself, or use)A60 185 :M-.091(the interactive input generator )Af215 sf-.097(setupdis)Af115 sf-.094(.  It simply prompts you for the appropriate quantities.)A60 215 :M-.085(When running )Af215 sf-.075(setupdis)Af115 sf-.071(, after giving the output file name, you will first be asked to supply the)A60 230 :M-.09(\322latitude\323 and \322longitude\323 of the origin.  These actually do nothing, and should be set to zero.)A60 245 :M-.094(Next enter the generation parameter.  This tells how you will specify the points at which you want)A60 260 :M-.081(calculated displacements.  If it is 0, this means you will be giving it a list of arbitrary x,y points)A60 275 :M-.063(\(good for irregularly distributed sites\).  If it is 1, this means you are asking for output at regularly)A60 290 :M-.088(spaced points on a rectangular grid \(good for uniform coverage of an area if you want to later plot\).)A60 320 :M-.069(Next is either the list of x,y points, or a description of how to generate the rectangular grid.  In the)A60 335 :M-.075(latter case, this consists of:  starting x-coordinate, increment in x direction, number of steps in x)A60 350 :M-.076(direction, starting y-coordinate, increment in y direction, number of steps in y direction.)A60 380 :M-.091(You will next be asked to supply the x coordinate and y coordinate of the first fault.  You should)A60 395 :M-.1(enter the location of the fault\325s reference corner \(see illustration\) measured in units of distance \(e.g.)A60 410 :M-.066(kilometers, )Af284 sf12 u284 :p15.119 :m-.072(not)Af115 sf-.067( degrees\).  Next is the strike angle of the fault, measured clockwise from north as)A60 425 :M-.072(viewed from above \(see diagram\).)A60 455 :M-.101(Next you give the vertical depth to the )Af215 sf-.12(bottom)Af115 sf-.102( of the fault, followed by the dip angle in degrees)A60 473 :M-.105(\(zero for horizontal; 90)AcFf299 sf-.105(\260)Asetfont-.105( for vertical\).  Next are )Af299 sf-.154(l)Af115 sf-.109( and )Af299 sf-.161(m)Af115 sf-.113(, the Lam\216 elastic parameters.  Actually,)A60 491 :M-.071(their absolute values are not important, only their ratio.  )Af299 sf-.105(l=m)Af115 sf-.083( is the most common assumption for)A60 506 :M-.049(typical rocks.)A60 536 :M-.095(U)Af230 sf0 3 rm(1)S0 -3 rmf115 sf-.053(, U)Af230 sf0 3 rm(2)S0 -3 rmf115 sf-.055(, and U)Af230 sf0 3 rm(3)S0 -3 rmf115 sf-.049( are the amounts of relative slip to apply to the fault surface in the strike slip, dip)A60 551 :M-.086(slip and tensile directions, respectively.  Positive U)Af230 sf0 3 rm-.085(1)A0 -3 rmf115 sf-.09( corresponds to )Af215 sf-.087(left-lateral motion)Af115 sf-.1( \(opposite)A60 566 :M-.062(in sense to the San Andreas fault for example\).  Positive U)Af230 sf0 3 rm-.058(2)A0 -3 rmf115 sf-.062( corresponds to )Af215 sf-.064(thrusting motion)Af115 sf-.079( with)A60 581 :M-.084(the hanging wall riding up over the foot wall \(like the San Gabriel mountains for example\).  U)Af230 sf0 3 rm(3)S0 -3 rm60 596 :Mf115 sf-.113(will not normally be used, since ordinary earthquake faults involve motion only tangential to the)A60 611 :M-.088(fault plane.)A60 641 :M-.098(Finally the length and width of the rectangular fault surface \(as illustrated\) are entered.  If you wish)A60 656 :M-.111(to model the effects of more than one fault, or build up a complex compound fault from rectangular)A60 671 :M-.093(\322tiles\323, the input is simply repeated, starting with the next fault\325s x coordinate and y coordinate.)A60 686 :M-.063(When done entering faults, you signal the end to )Af215 sf-.064(setupdis)Af115 sf-.068( by typing <control-D>.)Aendpshowpage%%Trailerend%%EOF